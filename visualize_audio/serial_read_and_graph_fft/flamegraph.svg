<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="726" onload="init(evt)" viewBox="0 0 1200 726" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="726" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="709.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="709.00"> </text><svg id="frames" x="10" width="1180" total_samples="172"><g><title>perf-exec (5 samples, 2.91%)</title><rect x="0.0000%" y="661" width="2.9070%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5"/><text x="0.2500%" y="671.50">pe..</text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 2.91%)</title><rect x="0.0000%" y="645" width="2.9070%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5"/><text x="0.2500%" y="655.50">en..</text></g><g><title>do_syscall_64 (5 samples, 2.91%)</title><rect x="0.0000%" y="629" width="2.9070%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="5"/><text x="0.2500%" y="639.50">do..</text></g><g><title>__x64_sys_execve (5 samples, 2.91%)</title><rect x="0.0000%" y="613" width="2.9070%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="5"/><text x="0.2500%" y="623.50">__..</text></g><g><title>do_execveat_common.isra.0 (5 samples, 2.91%)</title><rect x="0.0000%" y="597" width="2.9070%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="5"/><text x="0.2500%" y="607.50">do..</text></g><g><title>bprm_execve (5 samples, 2.91%)</title><rect x="0.0000%" y="581" width="2.9070%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="5"/><text x="0.2500%" y="591.50">bp..</text></g><g><title>bprm_execve.part.0 (5 samples, 2.91%)</title><rect x="0.0000%" y="565" width="2.9070%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="5"/><text x="0.2500%" y="575.50">bp..</text></g><g><title>exec_binprm (5 samples, 2.91%)</title><rect x="0.0000%" y="549" width="2.9070%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="5"/><text x="0.2500%" y="559.50">ex..</text></g><g><title>search_binary_handler (5 samples, 2.91%)</title><rect x="0.0000%" y="533" width="2.9070%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="5"/><text x="0.2500%" y="543.50">se..</text></g><g><title>load_elf_binary (5 samples, 2.91%)</title><rect x="0.0000%" y="517" width="2.9070%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="5"/><text x="0.2500%" y="527.50">lo..</text></g><g><title>strrchr (5 samples, 2.91%)</title><rect x="0.0000%" y="501" width="2.9070%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="5"/><text x="0.2500%" y="511.50">st..</text></g><g><title>[unknown] (1 samples, 0.58%)</title><rect x="2.9070%" y="645" width="0.5814%" height="15" fill="rgb(240,193,28)" fg:x="5" fg:w="1"/><text x="3.1570%" y="655.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="2.9070%" y="629" width="0.5814%" height="15" fill="rgb(216,20,37)" fg:x="5" fg:w="1"/><text x="3.1570%" y="639.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="2.9070%" y="613" width="0.5814%" height="15" fill="rgb(206,188,39)" fg:x="5" fg:w="1"/><text x="3.1570%" y="623.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="2.9070%" y="597" width="0.5814%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="1"/><text x="3.1570%" y="607.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="2.9070%" y="581" width="0.5814%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="1"/><text x="3.1570%" y="591.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="2.9070%" y="565" width="0.5814%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="1"/><text x="3.1570%" y="575.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="2.9070%" y="549" width="0.5814%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="1"/><text x="3.1570%" y="559.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="2.9070%" y="533" width="0.5814%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="1"/><text x="3.1570%" y="543.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="2.9070%" y="517" width="0.5814%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="1"/><text x="3.1570%" y="527.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="2.9070%" y="501" width="0.5814%" height="15" fill="rgb(249,33,26)" fg:x="5" fg:w="1"/><text x="3.1570%" y="511.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="2.9070%" y="485" width="0.5814%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="1"/><text x="3.1570%" y="495.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (1 samples, 0.58%)</title><rect x="2.9070%" y="469" width="0.5814%" height="15" fill="rgb(221,5,38)" fg:x="5" fg:w="1"/><text x="3.1570%" y="479.50"></text></g><g><title>[libLLVM-15.so.1] (1 samples, 0.58%)</title><rect x="2.9070%" y="453" width="0.5814%" height="15" fill="rgb(247,18,42)" fg:x="5" fg:w="1"/><text x="3.1570%" y="463.50"></text></g><g><title>llvm::FPPassManager::doFinalization (1 samples, 0.58%)</title><rect x="2.9070%" y="437" width="0.5814%" height="15" fill="rgb(241,131,45)" fg:x="5" fg:w="1"/><text x="3.1570%" y="447.50"></text></g><g><title>[libLLVM-15.so.1] (1 samples, 0.58%)</title><rect x="2.9070%" y="421" width="0.5814%" height="15" fill="rgb(249,31,29)" fg:x="5" fg:w="1"/><text x="3.1570%" y="431.50"></text></g><g><title>rs_seria:gdrv0 (2 samples, 1.16%)</title><rect x="2.9070%" y="661" width="1.1628%" height="15" fill="rgb(225,111,53)" fg:x="5" fg:w="2"/><text x="3.1570%" y="671.50"></text></g><g><title>__clone3 (1 samples, 0.58%)</title><rect x="3.4884%" y="645" width="0.5814%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="1"/><text x="3.7384%" y="655.50"></text></g><g><title>start_thread (1 samples, 0.58%)</title><rect x="3.4884%" y="629" width="0.5814%" height="15" fill="rgb(214,148,48)" fg:x="6" fg:w="1"/><text x="3.7384%" y="639.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="3.4884%" y="613" width="0.5814%" height="15" fill="rgb(232,36,49)" fg:x="6" fg:w="1"/><text x="3.7384%" y="623.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="3.4884%" y="597" width="0.5814%" height="15" fill="rgb(209,103,24)" fg:x="6" fg:w="1"/><text x="3.7384%" y="607.50"></text></g><g><title>rs_serial:sh1 (1 samples, 0.58%)</title><rect x="4.0698%" y="661" width="0.5814%" height="15" fill="rgb(229,88,8)" fg:x="7" fg:w="1"/><text x="4.3198%" y="671.50"></text></g><g><title>__clone3 (1 samples, 0.58%)</title><rect x="4.0698%" y="645" width="0.5814%" height="15" fill="rgb(213,181,19)" fg:x="7" fg:w="1"/><text x="4.3198%" y="655.50"></text></g><g><title>start_thread (1 samples, 0.58%)</title><rect x="4.0698%" y="629" width="0.5814%" height="15" fill="rgb(254,191,54)" fg:x="7" fg:w="1"/><text x="4.3198%" y="639.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="4.0698%" y="613" width="0.5814%" height="15" fill="rgb(241,83,37)" fg:x="7" fg:w="1"/><text x="4.3198%" y="623.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="4.0698%" y="597" width="0.5814%" height="15" fill="rgb(233,36,39)" fg:x="7" fg:w="1"/><text x="4.3198%" y="607.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="4.0698%" y="581" width="0.5814%" height="15" fill="rgb(226,3,54)" fg:x="7" fg:w="1"/><text x="4.3198%" y="591.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="4.0698%" y="565" width="0.5814%" height="15" fill="rgb(245,192,40)" fg:x="7" fg:w="1"/><text x="4.3198%" y="575.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="4.0698%" y="549" width="0.5814%" height="15" fill="rgb(238,167,29)" fg:x="7" fg:w="1"/><text x="4.3198%" y="559.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="4.0698%" y="533" width="0.5814%" height="15" fill="rgb(232,182,51)" fg:x="7" fg:w="1"/><text x="4.3198%" y="543.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="4.0698%" y="517" width="0.5814%" height="15" fill="rgb(231,60,39)" fg:x="7" fg:w="1"/><text x="4.3198%" y="527.50"></text></g><g><title>ZSTD_decompress (1 samples, 0.58%)</title><rect x="4.0698%" y="501" width="0.5814%" height="15" fill="rgb(208,69,12)" fg:x="7" fg:w="1"/><text x="4.3198%" y="511.50"></text></g><g><title>ZSTD_decompress_usingDDict (1 samples, 0.58%)</title><rect x="4.0698%" y="485" width="0.5814%" height="15" fill="rgb(235,93,37)" fg:x="7" fg:w="1"/><text x="4.3198%" y="495.50"></text></g><g><title>[libzstd.so.1.4.8] (1 samples, 0.58%)</title><rect x="4.0698%" y="469" width="0.5814%" height="15" fill="rgb(213,116,39)" fg:x="7" fg:w="1"/><text x="4.3198%" y="479.50"></text></g><g><title>ZSTD_decompressBlock_internal (1 samples, 0.58%)</title><rect x="4.0698%" y="453" width="0.5814%" height="15" fill="rgb(222,207,29)" fg:x="7" fg:w="1"/><text x="4.3198%" y="463.50"></text></g><g><title>ZSTD_decodeLiteralsBlock (1 samples, 0.58%)</title><rect x="4.0698%" y="437" width="0.5814%" height="15" fill="rgb(206,96,30)" fg:x="7" fg:w="1"/><text x="4.3198%" y="447.50"></text></g><g><title>HUF_decompress4X_hufOnly_wksp_bmi2 (1 samples, 0.58%)</title><rect x="4.0698%" y="421" width="0.5814%" height="15" fill="rgb(218,138,4)" fg:x="7" fg:w="1"/><text x="4.3198%" y="431.50"></text></g><g><title>HUF_readDTableX1_wksp_bmi2 (1 samples, 0.58%)</title><rect x="4.0698%" y="405" width="0.5814%" height="15" fill="rgb(250,191,14)" fg:x="7" fg:w="1"/><text x="4.3198%" y="415.50"></text></g><g><title>[libzstd.so.1.4.8] (1 samples, 0.58%)</title><rect x="4.0698%" y="389" width="0.5814%" height="15" fill="rgb(239,60,40)" fg:x="7" fg:w="1"/><text x="4.3198%" y="399.50"></text></g><g><title>rs_serial:sh2 (1 samples, 0.58%)</title><rect x="4.6512%" y="661" width="0.5814%" height="15" fill="rgb(206,27,48)" fg:x="8" fg:w="1"/><text x="4.9012%" y="671.50"></text></g><g><title>__clone3 (1 samples, 0.58%)</title><rect x="4.6512%" y="645" width="0.5814%" height="15" fill="rgb(225,35,8)" fg:x="8" fg:w="1"/><text x="4.9012%" y="655.50"></text></g><g><title>start_thread (1 samples, 0.58%)</title><rect x="4.6512%" y="629" width="0.5814%" height="15" fill="rgb(250,213,24)" fg:x="8" fg:w="1"/><text x="4.9012%" y="639.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="4.6512%" y="613" width="0.5814%" height="15" fill="rgb(247,123,22)" fg:x="8" fg:w="1"/><text x="4.9012%" y="623.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="4.6512%" y="597" width="0.5814%" height="15" fill="rgb(231,138,38)" fg:x="8" fg:w="1"/><text x="4.9012%" y="607.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="4.6512%" y="581" width="0.5814%" height="15" fill="rgb(231,145,46)" fg:x="8" fg:w="1"/><text x="4.9012%" y="591.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="4.6512%" y="565" width="0.5814%" height="15" fill="rgb(251,118,11)" fg:x="8" fg:w="1"/><text x="4.9012%" y="575.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="4.6512%" y="549" width="0.5814%" height="15" fill="rgb(217,147,25)" fg:x="8" fg:w="1"/><text x="4.9012%" y="559.50"></text></g><g><title>llvm::LLVMTargetMachine::addPassesToEmitFile (1 samples, 0.58%)</title><rect x="4.6512%" y="533" width="0.5814%" height="15" fill="rgb(247,81,37)" fg:x="8" fg:w="1"/><text x="4.9012%" y="543.50"></text></g><g><title>llvm::TargetPassConfig::addMachinePasses (1 samples, 0.58%)</title><rect x="4.6512%" y="517" width="0.5814%" height="15" fill="rgb(209,12,38)" fg:x="8" fg:w="1"/><text x="4.9012%" y="527.50"></text></g><g><title>llvm::TargetPassConfig::addMachineLateOptimization (1 samples, 0.58%)</title><rect x="4.6512%" y="501" width="0.5814%" height="15" fill="rgb(227,1,9)" fg:x="8" fg:w="1"/><text x="4.9012%" y="511.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.58%)</title><rect x="4.6512%" y="485" width="0.5814%" height="15" fill="rgb(248,47,43)" fg:x="8" fg:w="1"/><text x="4.9012%" y="495.50"></text></g><g><title>llvm::TargetPassConfig::addPass (1 samples, 0.58%)</title><rect x="4.6512%" y="469" width="0.5814%" height="15" fill="rgb(221,10,30)" fg:x="8" fg:w="1"/><text x="4.9012%" y="479.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (1 samples, 0.58%)</title><rect x="4.6512%" y="453" width="0.5814%" height="15" fill="rgb(210,229,1)" fg:x="8" fg:w="1"/><text x="4.9012%" y="463.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="5.2326%" y="565" width="0.5814%" height="15" fill="rgb(222,148,37)" fg:x="9" fg:w="1"/><text x="5.4826%" y="575.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="5.2326%" y="549" width="0.5814%" height="15" fill="rgb(234,67,33)" fg:x="9" fg:w="1"/><text x="5.4826%" y="559.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="5.2326%" y="533" width="0.5814%" height="15" fill="rgb(247,98,35)" fg:x="9" fg:w="1"/><text x="5.4826%" y="543.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="5.2326%" y="517" width="0.5814%" height="15" fill="rgb(247,138,52)" fg:x="9" fg:w="1"/><text x="5.4826%" y="527.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="5.2326%" y="501" width="0.5814%" height="15" fill="rgb(213,79,30)" fg:x="9" fg:w="1"/><text x="5.4826%" y="511.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="5.2326%" y="485" width="0.5814%" height="15" fill="rgb(246,177,23)" fg:x="9" fg:w="1"/><text x="5.4826%" y="495.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="5.2326%" y="469" width="0.5814%" height="15" fill="rgb(230,62,27)" fg:x="9" fg:w="1"/><text x="5.4826%" y="479.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="5.2326%" y="453" width="0.5814%" height="15" fill="rgb(216,154,8)" fg:x="9" fg:w="1"/><text x="5.4826%" y="463.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="5.2326%" y="437" width="0.5814%" height="15" fill="rgb(244,35,45)" fg:x="9" fg:w="1"/><text x="5.4826%" y="447.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="5.2326%" y="421" width="0.5814%" height="15" fill="rgb(251,115,12)" fg:x="9" fg:w="1"/><text x="5.4826%" y="431.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (1 samples, 0.58%)</title><rect x="5.2326%" y="405" width="0.5814%" height="15" fill="rgb(240,54,50)" fg:x="9" fg:w="1"/><text x="5.4826%" y="415.50"></text></g><g><title>[libLLVM-15.so.1] (1 samples, 0.58%)</title><rect x="5.2326%" y="389" width="0.5814%" height="15" fill="rgb(233,84,52)" fg:x="9" fg:w="1"/><text x="5.4826%" y="399.50"></text></g><g><title>llvm::FPPassManager::runOnFunction (1 samples, 0.58%)</title><rect x="5.2326%" y="373" width="0.5814%" height="15" fill="rgb(207,117,47)" fg:x="9" fg:w="1"/><text x="5.4826%" y="383.50"></text></g><g><title>llvm::MachineFunctionPass::runOnFunction (1 samples, 0.58%)</title><rect x="5.2326%" y="357" width="0.5814%" height="15" fill="rgb(249,43,39)" fg:x="9" fg:w="1"/><text x="5.4826%" y="367.50"></text></g><g><title>[libLLVM-15.so.1] (1 samples, 0.58%)</title><rect x="5.2326%" y="341" width="0.5814%" height="15" fill="rgb(209,38,44)" fg:x="9" fg:w="1"/><text x="5.4826%" y="351.50"></text></g><g><title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.58%)</title><rect x="5.2326%" y="325" width="0.5814%" height="15" fill="rgb(236,212,23)" fg:x="9" fg:w="1"/><text x="5.4826%" y="335.50"></text></g><g><title>llvm::Function::callsFunctionThatReturnsTwice (1 samples, 0.58%)</title><rect x="5.2326%" y="309" width="0.5814%" height="15" fill="rgb(242,79,21)" fg:x="9" fg:w="1"/><text x="5.4826%" y="319.50"></text></g><g><title>[radeonsi_dri.so] (2 samples, 1.16%)</title><rect x="5.2326%" y="629" width="1.1628%" height="15" fill="rgb(211,96,35)" fg:x="9" fg:w="2"/><text x="5.4826%" y="639.50"></text></g><g><title>[radeonsi_dri.so] (2 samples, 1.16%)</title><rect x="5.2326%" y="613" width="1.1628%" height="15" fill="rgb(253,215,40)" fg:x="9" fg:w="2"/><text x="5.4826%" y="623.50"></text></g><g><title>[radeonsi_dri.so] (2 samples, 1.16%)</title><rect x="5.2326%" y="597" width="1.1628%" height="15" fill="rgb(211,81,21)" fg:x="9" fg:w="2"/><text x="5.4826%" y="607.50"></text></g><g><title>[radeonsi_dri.so] (2 samples, 1.16%)</title><rect x="5.2326%" y="581" width="1.1628%" height="15" fill="rgb(208,190,38)" fg:x="9" fg:w="2"/><text x="5.4826%" y="591.50"></text></g><g><title>llvm::legacy::PassManagerImpl::run (1 samples, 0.58%)</title><rect x="5.8140%" y="565" width="0.5814%" height="15" fill="rgb(235,213,38)" fg:x="10" fg:w="1"/><text x="6.0640%" y="575.50"></text></g><g><title>[libLLVM-15.so.1] (1 samples, 0.58%)</title><rect x="5.8140%" y="549" width="0.5814%" height="15" fill="rgb(237,122,38)" fg:x="10" fg:w="1"/><text x="6.0640%" y="559.50"></text></g><g><title>llvm::FPPassManager::runOnFunction (1 samples, 0.58%)</title><rect x="5.8140%" y="533" width="0.5814%" height="15" fill="rgb(244,218,35)" fg:x="10" fg:w="1"/><text x="6.0640%" y="543.50"></text></g><g><title>llvm::MachineFunctionPass::runOnFunction (1 samples, 0.58%)</title><rect x="5.8140%" y="517" width="0.5814%" height="15" fill="rgb(240,68,47)" fg:x="10" fg:w="1"/><text x="6.0640%" y="527.50"></text></g><g><title>[libLLVM-15.so.1] (1 samples, 0.58%)</title><rect x="5.8140%" y="501" width="0.5814%" height="15" fill="rgb(210,16,53)" fg:x="10" fg:w="1"/><text x="6.0640%" y="511.50"></text></g><g><title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.58%)</title><rect x="5.8140%" y="485" width="0.5814%" height="15" fill="rgb(235,124,12)" fg:x="10" fg:w="1"/><text x="6.0640%" y="495.50"></text></g><g><title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.58%)</title><rect x="5.8140%" y="469" width="0.5814%" height="15" fill="rgb(224,169,11)" fg:x="10" fg:w="1"/><text x="6.0640%" y="479.50"></text></g><g><title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (1 samples, 0.58%)</title><rect x="5.8140%" y="453" width="0.5814%" height="15" fill="rgb(250,166,2)" fg:x="10" fg:w="1"/><text x="6.0640%" y="463.50"></text></g><g><title>[libLLVM-15.so.1] (1 samples, 0.58%)</title><rect x="5.8140%" y="437" width="0.5814%" height="15" fill="rgb(242,216,29)" fg:x="10" fg:w="1"/><text x="6.0640%" y="447.50"></text></g><g><title>[libLLVM-15.so.1] (1 samples, 0.58%)</title><rect x="5.8140%" y="421" width="0.5814%" height="15" fill="rgb(230,116,27)" fg:x="10" fg:w="1"/><text x="6.0640%" y="431.50"></text></g><g><title>[libLLVM-15.so.1] (1 samples, 0.58%)</title><rect x="5.8140%" y="405" width="0.5814%" height="15" fill="rgb(228,99,48)" fg:x="10" fg:w="1"/><text x="6.0640%" y="415.50"></text></g><g><title>macroquad::Context::new (1 samples, 0.58%)</title><rect x="6.3953%" y="629" width="0.5814%" height="15" fill="rgb(253,11,6)" fg:x="11" fg:w="1"/><text x="6.6453%" y="639.50"></text></g><g><title>macroquad::quad_gl::QuadGl::new (1 samples, 0.58%)</title><rect x="6.3953%" y="613" width="0.5814%" height="15" fill="rgb(247,143,39)" fg:x="11" fg:w="1"/><text x="6.6453%" y="623.50"></text></g><g><title>macroquad::quad_gl::PipelinesStorage::new (1 samples, 0.58%)</title><rect x="6.3953%" y="597" width="0.5814%" height="15" fill="rgb(236,97,10)" fg:x="11" fg:w="1"/><text x="6.6453%" y="607.50"></text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::new_shader (1 samples, 0.58%)</title><rect x="6.3953%" y="581" width="0.5814%" height="15" fill="rgb(233,208,19)" fg:x="11" fg:w="1"/><text x="6.6453%" y="591.50"></text></g><g><title>miniquad::graphics::gl::load_shader_internal (1 samples, 0.58%)</title><rect x="6.3953%" y="565" width="0.5814%" height="15" fill="rgb(216,164,2)" fg:x="11" fg:w="1"/><text x="6.6453%" y="575.50"></text></g><g><title>miniquad::graphics::gl::load_shader (1 samples, 0.58%)</title><rect x="6.3953%" y="549" width="0.5814%" height="15" fill="rgb(220,129,5)" fg:x="11" fg:w="1"/><text x="6.6453%" y="559.50"></text></g><g><title>miniquad::native::gl::glCompileShader (1 samples, 0.58%)</title><rect x="6.3953%" y="533" width="0.5814%" height="15" fill="rgb(242,17,10)" fg:x="11" fg:w="1"/><text x="6.6453%" y="543.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="6.3953%" y="517" width="0.5814%" height="15" fill="rgb(242,107,0)" fg:x="11" fg:w="1"/><text x="6.6453%" y="527.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="6.3953%" y="501" width="0.5814%" height="15" fill="rgb(251,28,31)" fg:x="11" fg:w="1"/><text x="6.6453%" y="511.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="6.3953%" y="485" width="0.5814%" height="15" fill="rgb(233,223,10)" fg:x="11" fg:w="1"/><text x="6.6453%" y="495.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="6.3953%" y="469" width="0.5814%" height="15" fill="rgb(215,21,27)" fg:x="11" fg:w="1"/><text x="6.6453%" y="479.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="6.3953%" y="453" width="0.5814%" height="15" fill="rgb(232,23,21)" fg:x="11" fg:w="1"/><text x="6.6453%" y="463.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="6.3953%" y="437" width="0.5814%" height="15" fill="rgb(244,5,23)" fg:x="11" fg:w="1"/><text x="6.6453%" y="447.50"></text></g><g><title>__vsnprintf_internal (1 samples, 0.58%)</title><rect x="6.3953%" y="421" width="0.5814%" height="15" fill="rgb(226,81,46)" fg:x="11" fg:w="1"/><text x="6.6453%" y="431.50"></text></g><g><title>__vfprintf_internal (1 samples, 0.58%)</title><rect x="6.3953%" y="405" width="0.5814%" height="15" fill="rgb(247,70,30)" fg:x="11" fg:w="1"/><text x="6.6453%" y="415.50"></text></g><g><title>macroquad::Window::from_config::{{closure}} (1 samples, 0.58%)</title><rect x="6.9767%" y="629" width="0.5814%" height="15" fill="rgb(212,68,19)" fg:x="12" fg:w="1"/><text x="7.2267%" y="639.50"></text></g><g><title>macroquad::Context::new (1 samples, 0.58%)</title><rect x="6.9767%" y="613" width="0.5814%" height="15" fill="rgb(240,187,13)" fg:x="12" fg:w="1"/><text x="7.2267%" y="623.50"></text></g><g><title>macroquad::texture::Batcher::new (1 samples, 0.58%)</title><rect x="6.9767%" y="597" width="0.5814%" height="15" fill="rgb(223,113,26)" fg:x="12" fg:w="1"/><text x="7.2267%" y="607.50"></text></g><g><title>macroquad::text::atlas::Atlas::new (1 samples, 0.58%)</title><rect x="6.9767%" y="581" width="0.5814%" height="15" fill="rgb(206,192,2)" fg:x="12" fg:w="1"/><text x="7.2267%" y="591.50"></text></g><g><title>macroquad::texture::Image::gen_image_color (1 samples, 0.58%)</title><rect x="6.9767%" y="565" width="0.5814%" height="15" fill="rgb(241,108,4)" fg:x="12" fg:w="1"/><text x="7.2267%" y="575.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.58%)</title><rect x="6.9767%" y="549" width="0.5814%" height="15" fill="rgb(247,173,49)" fg:x="12" fg:w="1"/><text x="7.2267%" y="559.50"></text></g><g><title>exc_page_fault (1 samples, 0.58%)</title><rect x="6.9767%" y="533" width="0.5814%" height="15" fill="rgb(224,114,35)" fg:x="12" fg:w="1"/><text x="7.2267%" y="543.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.58%)</title><rect x="6.9767%" y="517" width="0.5814%" height="15" fill="rgb(245,159,27)" fg:x="12" fg:w="1"/><text x="7.2267%" y="527.50"></text></g><g><title>handle_mm_fault (1 samples, 0.58%)</title><rect x="6.9767%" y="501" width="0.5814%" height="15" fill="rgb(245,172,44)" fg:x="12" fg:w="1"/><text x="7.2267%" y="511.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.58%)</title><rect x="6.9767%" y="485" width="0.5814%" height="15" fill="rgb(236,23,11)" fg:x="12" fg:w="1"/><text x="7.2267%" y="495.50"></text></g><g><title>handle_pte_fault (1 samples, 0.58%)</title><rect x="6.9767%" y="469" width="0.5814%" height="15" fill="rgb(205,117,38)" fg:x="12" fg:w="1"/><text x="7.2267%" y="479.50"></text></g><g><title>do_anonymous_page (1 samples, 0.58%)</title><rect x="6.9767%" y="453" width="0.5814%" height="15" fill="rgb(237,72,25)" fg:x="12" fg:w="1"/><text x="7.2267%" y="463.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.58%)</title><rect x="6.9767%" y="437" width="0.5814%" height="15" fill="rgb(244,70,9)" fg:x="12" fg:w="1"/><text x="7.2267%" y="447.50"></text></g><g><title>__folio_alloc (1 samples, 0.58%)</title><rect x="6.9767%" y="421" width="0.5814%" height="15" fill="rgb(217,125,39)" fg:x="12" fg:w="1"/><text x="7.2267%" y="431.50"></text></g><g><title>__alloc_pages (1 samples, 0.58%)</title><rect x="6.9767%" y="405" width="0.5814%" height="15" fill="rgb(235,36,10)" fg:x="12" fg:w="1"/><text x="7.2267%" y="415.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.58%)</title><rect x="6.9767%" y="389" width="0.5814%" height="15" fill="rgb(251,123,47)" fg:x="12" fg:w="1"/><text x="7.2267%" y="399.50"></text></g><g><title>rmqueue (1 samples, 0.58%)</title><rect x="6.9767%" y="373" width="0.5814%" height="15" fill="rgb(221,13,13)" fg:x="12" fg:w="1"/><text x="7.2267%" y="383.50"></text></g><g><title>rmqueue_pcplist.constprop.0 (1 samples, 0.58%)</title><rect x="6.9767%" y="357" width="0.5814%" height="15" fill="rgb(238,131,9)" fg:x="12" fg:w="1"/><text x="7.2267%" y="367.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.58%)</title><rect x="6.9767%" y="341" width="0.5814%" height="15" fill="rgb(211,50,8)" fg:x="12" fg:w="1"/><text x="7.2267%" y="351.50"></text></g><g><title>__fdget_pos (1 samples, 0.58%)</title><rect x="8.1395%" y="357" width="0.5814%" height="15" fill="rgb(245,182,24)" fg:x="14" fg:w="1"/><text x="8.3895%" y="367.50"></text></g><g><title>iov_iter_init (1 samples, 0.58%)</title><rect x="9.3023%" y="325" width="0.5814%" height="15" fill="rgb(242,14,37)" fg:x="16" fg:w="1"/><text x="9.5523%" y="335.50"></text></g><g><title>ktime_get_real_seconds (1 samples, 0.58%)</title><rect x="9.8837%" y="309" width="0.5814%" height="15" fill="rgb(246,228,12)" fg:x="17" fg:w="1"/><text x="10.1337%" y="319.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.58%)</title><rect x="10.4651%" y="293" width="0.5814%" height="15" fill="rgb(213,55,15)" fg:x="18" fg:w="1"/><text x="10.7151%" y="303.50"></text></g><g><title>mutex_lock_interruptible (1 samples, 0.58%)</title><rect x="11.0465%" y="293" width="0.5814%" height="15" fill="rgb(209,9,3)" fg:x="19" fg:w="1"/><text x="11.2965%" y="303.50"></text></g><g><title>down_read (1 samples, 0.58%)</title><rect x="11.6279%" y="277" width="0.5814%" height="15" fill="rgb(230,59,30)" fg:x="20" fg:w="1"/><text x="11.8779%" y="287.50"></text></g><g><title>n_tty_check_unthrottle (1 samples, 0.58%)</title><rect x="12.2093%" y="277" width="0.5814%" height="15" fill="rgb(209,121,21)" fg:x="21" fg:w="1"/><text x="12.4593%" y="287.50"></text></g><g><title>tty_unthrottle_safe (1 samples, 0.58%)</title><rect x="12.2093%" y="261" width="0.5814%" height="15" fill="rgb(220,109,13)" fg:x="21" fg:w="1"/><text x="12.4593%" y="271.50"></text></g><g><title>mutex_lock (1 samples, 0.58%)</title><rect x="12.2093%" y="245" width="0.5814%" height="15" fill="rgb(232,18,1)" fg:x="21" fg:w="1"/><text x="12.4593%" y="255.50"></text></g><g><title>new_sync_read (6 samples, 3.49%)</title><rect x="9.8837%" y="325" width="3.4884%" height="15" fill="rgb(215,41,42)" fg:x="17" fg:w="6"/><text x="10.1337%" y="335.50">new..</text></g><g><title>tty_read (5 samples, 2.91%)</title><rect x="10.4651%" y="309" width="2.9070%" height="15" fill="rgb(224,123,36)" fg:x="18" fg:w="5"/><text x="10.7151%" y="319.50">tt..</text></g><g><title>n_tty_read (3 samples, 1.74%)</title><rect x="11.6279%" y="293" width="1.7442%" height="15" fill="rgb(240,125,3)" fg:x="20" fg:w="3"/><text x="11.8779%" y="303.50"></text></g><g><title>tty_audit_add_data (1 samples, 0.58%)</title><rect x="12.7907%" y="277" width="0.5814%" height="15" fill="rgb(205,98,50)" fg:x="22" fg:w="1"/><text x="13.0407%" y="287.50"></text></g><g><title>apparmor_file_permission (1 samples, 0.58%)</title><rect x="13.3721%" y="293" width="0.5814%" height="15" fill="rgb(205,185,37)" fg:x="23" fg:w="1"/><text x="13.6221%" y="303.50"></text></g><g><title>dget_parent (1 samples, 0.58%)</title><rect x="13.9535%" y="261" width="0.5814%" height="15" fill="rgb(238,207,15)" fg:x="24" fg:w="1"/><text x="14.2035%" y="271.50"></text></g><g><title>lockref_get_not_zero (1 samples, 0.58%)</title><rect x="13.9535%" y="245" width="0.5814%" height="15" fill="rgb(213,199,42)" fg:x="24" fg:w="1"/><text x="14.2035%" y="255.50"></text></g><g><title>nix::unistd::read (12 samples, 6.98%)</title><rect x="8.1395%" y="453" width="6.9767%" height="15" fill="rgb(235,201,11)" fg:x="14" fg:w="12"/><text x="8.3895%" y="463.50">nix::unis..</text></g><g><title>__GI___libc_read (12 samples, 6.98%)</title><rect x="8.1395%" y="437" width="6.9767%" height="15" fill="rgb(207,46,11)" fg:x="14" fg:w="12"/><text x="8.3895%" y="447.50">__GI___li..</text></g><g><title>__GI___libc_read (12 samples, 6.98%)</title><rect x="8.1395%" y="421" width="6.9767%" height="15" fill="rgb(241,35,35)" fg:x="14" fg:w="12"/><text x="8.3895%" y="431.50">__GI___li..</text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 6.98%)</title><rect x="8.1395%" y="405" width="6.9767%" height="15" fill="rgb(243,32,47)" fg:x="14" fg:w="12"/><text x="8.3895%" y="415.50">entry_SYS..</text></g><g><title>do_syscall_64 (12 samples, 6.98%)</title><rect x="8.1395%" y="389" width="6.9767%" height="15" fill="rgb(247,202,23)" fg:x="14" fg:w="12"/><text x="8.3895%" y="399.50">do_syscal..</text></g><g><title>__x64_sys_read (12 samples, 6.98%)</title><rect x="8.1395%" y="373" width="6.9767%" height="15" fill="rgb(219,102,11)" fg:x="14" fg:w="12"/><text x="8.3895%" y="383.50">__x64_sys..</text></g><g><title>ksys_read (11 samples, 6.40%)</title><rect x="8.7209%" y="357" width="6.3953%" height="15" fill="rgb(243,110,44)" fg:x="15" fg:w="11"/><text x="8.9709%" y="367.50">ksys_read</text></g><g><title>vfs_read (11 samples, 6.40%)</title><rect x="8.7209%" y="341" width="6.3953%" height="15" fill="rgb(222,74,54)" fg:x="15" fg:w="11"/><text x="8.9709%" y="351.50">vfs_read</text></g><g><title>rw_verify_area (3 samples, 1.74%)</title><rect x="13.3721%" y="325" width="1.7442%" height="15" fill="rgb(216,99,12)" fg:x="23" fg:w="3"/><text x="13.6221%" y="335.50"></text></g><g><title>security_file_permission (3 samples, 1.74%)</title><rect x="13.3721%" y="309" width="1.7442%" height="15" fill="rgb(226,22,26)" fg:x="23" fg:w="3"/><text x="13.6221%" y="319.50"></text></g><g><title>fsnotify_perm.part.0 (2 samples, 1.16%)</title><rect x="13.9535%" y="293" width="1.1628%" height="15" fill="rgb(217,163,10)" fg:x="24" fg:w="2"/><text x="14.2035%" y="303.50"></text></g><g><title>__fsnotify_parent (2 samples, 1.16%)</title><rect x="13.9535%" y="277" width="1.1628%" height="15" fill="rgb(213,25,53)" fg:x="24" fg:w="2"/><text x="14.2035%" y="287.50"></text></g><g><title>fsnotify (1 samples, 0.58%)</title><rect x="14.5349%" y="261" width="0.5814%" height="15" fill="rgb(252,105,26)" fg:x="25" fg:w="1"/><text x="14.7849%" y="271.50"></text></g><g><title>&lt;nix::sys::time::TimeSpec as nix::sys::time::TimeValLike&gt;::milliseconds (1 samples, 0.58%)</title><rect x="15.6977%" y="421" width="0.5814%" height="15" fill="rgb(220,39,43)" fg:x="27" fg:w="1"/><text x="15.9477%" y="431.50"></text></g><g><title>&lt;nix::sys::time::TimeSpec as nix::sys::time::TimeValLike&gt;::nanoseconds (1 samples, 0.58%)</title><rect x="15.6977%" y="405" width="0.5814%" height="15" fill="rgb(229,68,48)" fg:x="27" fg:w="1"/><text x="15.9477%" y="415.50"></text></g><g><title>nix::sys::time::div_mod_floor_64 (1 samples, 0.58%)</title><rect x="15.6977%" y="389" width="0.5814%" height="15" fill="rgb(252,8,32)" fg:x="27" fg:w="1"/><text x="15.9477%" y="399.50"></text></g><g><title>nix::sys::time::div_floor_64 (1 samples, 0.58%)</title><rect x="15.6977%" y="373" width="0.5814%" height="15" fill="rgb(223,20,43)" fg:x="27" fg:w="1"/><text x="15.9477%" y="383.50"></text></g><g><title>nix::sys::time::div_rem_64 (1 samples, 0.58%)</title><rect x="15.6977%" y="357" width="0.5814%" height="15" fill="rgb(229,81,49)" fg:x="27" fg:w="1"/><text x="15.9477%" y="367.50"></text></g><g><title>hrtimer_start_range_ns (1 samples, 0.58%)</title><rect x="17.4419%" y="277" width="0.5814%" height="15" fill="rgb(236,28,36)" fg:x="30" fg:w="1"/><text x="17.6919%" y="287.50"></text></g><g><title>__hrtimer_start_range_ns (1 samples, 0.58%)</title><rect x="17.4419%" y="261" width="0.5814%" height="15" fill="rgb(249,185,26)" fg:x="30" fg:w="1"/><text x="17.6919%" y="271.50"></text></g><g><title>enqueue_hrtimer (1 samples, 0.58%)</title><rect x="17.4419%" y="245" width="0.5814%" height="15" fill="rgb(249,174,33)" fg:x="30" fg:w="1"/><text x="17.6919%" y="255.50"></text></g><g><title>timerqueue_add (1 samples, 0.58%)</title><rect x="17.4419%" y="229" width="0.5814%" height="15" fill="rgb(233,201,37)" fg:x="30" fg:w="1"/><text x="17.6919%" y="239.50"></text></g><g><title>update_curr (1 samples, 0.58%)</title><rect x="19.1860%" y="197" width="0.5814%" height="15" fill="rgb(221,78,26)" fg:x="33" fg:w="1"/><text x="19.4360%" y="207.50"></text></g><g><title>cpuacct_charge (1 samples, 0.58%)</title><rect x="19.1860%" y="181" width="0.5814%" height="15" fill="rgb(250,127,30)" fg:x="33" fg:w="1"/><text x="19.4360%" y="191.50"></text></g><g><title>dequeue_entity (3 samples, 1.74%)</title><rect x="18.6047%" y="213" width="1.7442%" height="15" fill="rgb(230,49,44)" fg:x="32" fg:w="3"/><text x="18.8547%" y="223.50"></text></g><g><title>update_load_avg (1 samples, 0.58%)</title><rect x="19.7674%" y="197" width="0.5814%" height="15" fill="rgb(229,67,23)" fg:x="34" fg:w="1"/><text x="20.0174%" y="207.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.58%)</title><rect x="19.7674%" y="181" width="0.5814%" height="15" fill="rgb(249,83,47)" fg:x="34" fg:w="1"/><text x="20.0174%" y="191.50"></text></g><g><title>dequeue_task (4 samples, 2.33%)</title><rect x="18.6047%" y="245" width="2.3256%" height="15" fill="rgb(215,43,3)" fg:x="32" fg:w="4"/><text x="18.8547%" y="255.50">d..</text></g><g><title>dequeue_task_fair (4 samples, 2.33%)</title><rect x="18.6047%" y="229" width="2.3256%" height="15" fill="rgb(238,154,13)" fg:x="32" fg:w="4"/><text x="18.8547%" y="239.50">d..</text></g><g><title>update_cfs_group (1 samples, 0.58%)</title><rect x="20.3488%" y="213" width="0.5814%" height="15" fill="rgb(219,56,2)" fg:x="35" fg:w="1"/><text x="20.5988%" y="223.50"></text></g><g><title>__const_udelay (1 samples, 0.58%)</title><rect x="21.5116%" y="165" width="0.5814%" height="15" fill="rgb(233,0,4)" fg:x="37" fg:w="1"/><text x="21.7616%" y="175.50"></text></g><g><title>__const_udelay (1 samples, 0.58%)</title><rect x="22.6744%" y="149" width="0.5814%" height="15" fill="rgb(235,30,7)" fg:x="39" fg:w="1"/><text x="22.9244%" y="159.50"></text></g><g><title>delay_halt (1 samples, 0.58%)</title><rect x="22.6744%" y="133" width="0.5814%" height="15" fill="rgb(250,79,13)" fg:x="39" fg:w="1"/><text x="22.9244%" y="143.50"></text></g><g><title>delay_halt.part.0 (1 samples, 0.58%)</title><rect x="22.6744%" y="117" width="0.5814%" height="15" fill="rgb(211,146,34)" fg:x="39" fg:w="1"/><text x="22.9244%" y="127.50"></text></g><g><title>delay_halt_mwaitx (1 samples, 0.58%)</title><rect x="22.6744%" y="101" width="0.5814%" height="15" fill="rgb(228,22,38)" fg:x="39" fg:w="1"/><text x="22.9244%" y="111.50"></text></g><g><title>amd_pmu_check_overflow (5 samples, 2.91%)</title><rect x="22.0930%" y="165" width="2.9070%" height="15" fill="rgb(235,168,5)" fg:x="38" fg:w="5"/><text x="22.3430%" y="175.50">am..</text></g><g><title>amd_pmu_test_overflow_topbit (3 samples, 1.74%)</title><rect x="23.2558%" y="149" width="1.7442%" height="15" fill="rgb(221,155,16)" fg:x="40" fg:w="3"/><text x="23.5058%" y="159.50"></text></g><g><title>native_read_msr (2 samples, 1.16%)</title><rect x="23.8372%" y="133" width="1.1628%" height="15" fill="rgb(215,215,53)" fg:x="41" fg:w="2"/><text x="24.0872%" y="143.50"></text></g><g><title>native_write_msr (5 samples, 2.91%)</title><rect x="25.0000%" y="165" width="2.9070%" height="15" fill="rgb(223,4,10)" fg:x="43" fg:w="5"/><text x="25.2500%" y="175.50">na..</text></g><g><title>amd_pmu_addr_offset (1 samples, 0.58%)</title><rect x="27.9070%" y="149" width="0.5814%" height="15" fill="rgb(234,103,6)" fg:x="48" fg:w="1"/><text x="28.1570%" y="159.50"></text></g><g><title>prepare_task_switch (16 samples, 9.30%)</title><rect x="20.9302%" y="245" width="9.3023%" height="15" fill="rgb(227,97,0)" fg:x="36" fg:w="16"/><text x="21.1802%" y="255.50">prepare_task_..</text></g><g><title>__perf_event_task_sched_out (16 samples, 9.30%)</title><rect x="20.9302%" y="229" width="9.3023%" height="15" fill="rgb(234,150,53)" fg:x="36" fg:w="16"/><text x="21.1802%" y="239.50">__perf_event_..</text></g><g><title>perf_event_context_sched_out (16 samples, 9.30%)</title><rect x="20.9302%" y="213" width="9.3023%" height="15" fill="rgb(228,201,54)" fg:x="36" fg:w="16"/><text x="21.1802%" y="223.50">perf_event_co..</text></g><g><title>x86_pmu_disable (15 samples, 8.72%)</title><rect x="21.5116%" y="197" width="8.7209%" height="15" fill="rgb(222,22,37)" fg:x="37" fg:w="15"/><text x="21.7616%" y="207.50">x86_pmu_disa..</text></g><g><title>amd_pmu_disable_all (15 samples, 8.72%)</title><rect x="21.5116%" y="181" width="8.7209%" height="15" fill="rgb(237,53,32)" fg:x="37" fg:w="15"/><text x="21.7616%" y="191.50">amd_pmu_disa..</text></g><g><title>x86_pmu_disable_all (4 samples, 2.33%)</title><rect x="27.9070%" y="165" width="2.3256%" height="15" fill="rgb(233,25,53)" fg:x="48" fg:w="4"/><text x="28.1570%" y="175.50">x..</text></g><g><title>native_read_msr (3 samples, 1.74%)</title><rect x="28.4884%" y="149" width="1.7442%" height="15" fill="rgb(210,40,34)" fg:x="49" fg:w="3"/><text x="28.7384%" y="159.50"></text></g><g><title>psi_group_change (3 samples, 1.74%)</title><rect x="30.2326%" y="229" width="1.7442%" height="15" fill="rgb(241,220,44)" fg:x="52" fg:w="3"/><text x="30.4826%" y="239.50"></text></g><g><title>schedule_hrtimeout_range (26 samples, 15.12%)</title><rect x="17.4419%" y="309" width="15.1163%" height="15" fill="rgb(235,28,35)" fg:x="30" fg:w="26"/><text x="17.6919%" y="319.50">schedule_hrtimeout_range</text></g><g><title>schedule_hrtimeout_range_clock (26 samples, 15.12%)</title><rect x="17.4419%" y="293" width="15.1163%" height="15" fill="rgb(210,56,17)" fg:x="30" fg:w="26"/><text x="17.6919%" y="303.50">schedule_hrtimeout_rang..</text></g><g><title>schedule (25 samples, 14.53%)</title><rect x="18.0233%" y="277" width="14.5349%" height="15" fill="rgb(224,130,29)" fg:x="31" fg:w="25"/><text x="18.2733%" y="287.50">schedule</text></g><g><title>__schedule (25 samples, 14.53%)</title><rect x="18.0233%" y="261" width="14.5349%" height="15" fill="rgb(235,212,8)" fg:x="31" fg:w="25"/><text x="18.2733%" y="271.50">__schedule</text></g><g><title>psi_task_switch (4 samples, 2.33%)</title><rect x="30.2326%" y="245" width="2.3256%" height="15" fill="rgb(223,33,50)" fg:x="52" fg:w="4"/><text x="30.4826%" y="255.50">p..</text></g><g><title>sched_clock_cpu (1 samples, 0.58%)</title><rect x="31.9767%" y="229" width="0.5814%" height="15" fill="rgb(219,149,13)" fg:x="55" fg:w="1"/><text x="32.2267%" y="239.50"></text></g><g><title>native_sched_clock (1 samples, 0.58%)</title><rect x="31.9767%" y="213" width="0.5814%" height="15" fill="rgb(250,156,29)" fg:x="55" fg:w="1"/><text x="32.2267%" y="223.50"></text></g><g><title>__pollwait (1 samples, 0.58%)</title><rect x="33.7209%" y="277" width="0.5814%" height="15" fill="rgb(216,193,19)" fg:x="58" fg:w="1"/><text x="33.9709%" y="287.50"></text></g><g><title>add_wait_queue (1 samples, 0.58%)</title><rect x="33.7209%" y="261" width="0.5814%" height="15" fill="rgb(216,135,14)" fg:x="58" fg:w="1"/><text x="33.9709%" y="271.50"></text></g><g><title>do_poll.constprop.0 (32 samples, 18.60%)</title><rect x="16.8605%" y="325" width="18.6047%" height="15" fill="rgb(241,47,5)" fg:x="29" fg:w="32"/><text x="17.1105%" y="335.50">do_poll.constprop.0</text></g><g><title>tty_poll (5 samples, 2.91%)</title><rect x="32.5581%" y="309" width="2.9070%" height="15" fill="rgb(233,42,35)" fg:x="56" fg:w="5"/><text x="32.8081%" y="319.50">tt..</text></g><g><title>n_tty_poll (3 samples, 1.74%)</title><rect x="33.7209%" y="293" width="1.7442%" height="15" fill="rgb(231,13,6)" fg:x="58" fg:w="3"/><text x="33.9709%" y="303.50"></text></g><g><title>tty_buffer_flush_work (2 samples, 1.16%)</title><rect x="34.3023%" y="277" width="1.1628%" height="15" fill="rgb(207,181,40)" fg:x="59" fg:w="2"/><text x="34.5523%" y="287.50"></text></g><g><title>flush_work (2 samples, 1.16%)</title><rect x="34.3023%" y="261" width="1.1628%" height="15" fill="rgb(254,173,49)" fg:x="59" fg:w="2"/><text x="34.5523%" y="271.50"></text></g><g><title>__flush_work.isra.0 (2 samples, 1.16%)</title><rect x="34.3023%" y="245" width="1.1628%" height="15" fill="rgb(221,1,38)" fg:x="59" fg:w="2"/><text x="34.5523%" y="255.50"></text></g><g><title>do_sys_poll (33 samples, 19.19%)</title><rect x="16.8605%" y="341" width="19.1860%" height="15" fill="rgb(206,124,46)" fg:x="29" fg:w="33"/><text x="17.1105%" y="351.50">do_sys_poll</text></g><g><title>fput (1 samples, 0.58%)</title><rect x="35.4651%" y="325" width="0.5814%" height="15" fill="rgb(249,21,11)" fg:x="61" fg:w="1"/><text x="35.7151%" y="335.50"></text></g><g><title>poll_select_finish (2 samples, 1.16%)</title><rect x="36.0465%" y="341" width="1.1628%" height="15" fill="rgb(222,201,40)" fg:x="62" fg:w="2"/><text x="36.2965%" y="351.50"></text></g><g><title>put_timespec64 (1 samples, 0.58%)</title><rect x="36.6279%" y="325" width="0.5814%" height="15" fill="rgb(235,61,29)" fg:x="63" fg:w="1"/><text x="36.8779%" y="335.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.58%)</title><rect x="36.6279%" y="309" width="0.5814%" height="15" fill="rgb(219,207,3)" fg:x="63" fg:w="1"/><text x="36.8779%" y="319.50"></text></g><g><title>read_tsc (1 samples, 0.58%)</title><rect x="37.2093%" y="341" width="0.5814%" height="15" fill="rgb(222,56,46)" fg:x="64" fg:w="1"/><text x="37.4593%" y="351.50"></text></g><g><title>__x64_sys_ppoll (38 samples, 22.09%)</title><rect x="16.8605%" y="357" width="22.0930%" height="15" fill="rgb(239,76,54)" fg:x="29" fg:w="38"/><text x="17.1105%" y="367.50">__x64_sys_ppoll</text></g><g><title>set_user_sigmask (2 samples, 1.16%)</title><rect x="37.7907%" y="341" width="1.1628%" height="15" fill="rgb(231,124,27)" fg:x="65" fg:w="2"/><text x="38.0407%" y="351.50"></text></g><g><title>copy_user_enhanced_fast_string (2 samples, 1.16%)</title><rect x="37.7907%" y="325" width="1.1628%" height="15" fill="rgb(249,195,6)" fg:x="65" fg:w="2"/><text x="38.0407%" y="335.50"></text></g><g><title>get_timespec64 (1 samples, 0.58%)</title><rect x="38.9535%" y="357" width="0.5814%" height="15" fill="rgb(237,174,47)" fg:x="67" fg:w="1"/><text x="39.2035%" y="367.50"></text></g><g><title>__put_user_nocheck_8 (1 samples, 0.58%)</title><rect x="39.5349%" y="293" width="0.5814%" height="15" fill="rgb(206,201,31)" fg:x="68" fg:w="1"/><text x="39.7849%" y="303.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (42 samples, 24.42%)</title><rect x="16.2791%" y="389" width="24.4186%" height="15" fill="rgb(231,57,52)" fg:x="28" fg:w="42"/><text x="16.5291%" y="399.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>do_syscall_64 (42 samples, 24.42%)</title><rect x="16.2791%" y="373" width="24.4186%" height="15" fill="rgb(248,177,22)" fg:x="28" fg:w="42"/><text x="16.5291%" y="383.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (2 samples, 1.16%)</title><rect x="39.5349%" y="357" width="1.1628%" height="15" fill="rgb(215,211,37)" fg:x="68" fg:w="2"/><text x="39.7849%" y="367.50"></text></g><g><title>exit_to_user_mode_prepare (2 samples, 1.16%)</title><rect x="39.5349%" y="341" width="1.1628%" height="15" fill="rgb(241,128,51)" fg:x="68" fg:w="2"/><text x="39.7849%" y="351.50"></text></g><g><title>exit_to_user_mode_loop (2 samples, 1.16%)</title><rect x="39.5349%" y="325" width="1.1628%" height="15" fill="rgb(227,165,31)" fg:x="68" fg:w="2"/><text x="39.7849%" y="335.50"></text></g><g><title>__rseq_handle_notify_resume (2 samples, 1.16%)</title><rect x="39.5349%" y="309" width="1.1628%" height="15" fill="rgb(228,167,24)" fg:x="68" fg:w="2"/><text x="39.7849%" y="319.50"></text></g><g><title>rseq_ip_fixup (1 samples, 0.58%)</title><rect x="40.1163%" y="293" width="0.5814%" height="15" fill="rgb(228,143,12)" fg:x="69" fg:w="1"/><text x="40.3663%" y="303.50"></text></g><g><title>__get_user_8 (1 samples, 0.58%)</title><rect x="40.1163%" y="277" width="0.5814%" height="15" fill="rgb(249,149,8)" fg:x="69" fg:w="1"/><text x="40.3663%" y="287.50"></text></g><g><title>&lt;serialport::posix::tty::TTYPort as std::io::Read&gt;::read (57 samples, 33.14%)</title><rect x="8.1395%" y="469" width="33.1395%" height="15" fill="rgb(243,35,44)" fg:x="14" fg:w="57"/><text x="8.3895%" y="479.50">&lt;serialport::posix::tty::TTYPort as std::io::Read&gt;::re..</text></g><g><title>serialport::posix::poll::wait_read_fd (45 samples, 26.16%)</title><rect x="15.1163%" y="453" width="26.1628%" height="15" fill="rgb(246,89,9)" fg:x="26" fg:w="45"/><text x="15.3663%" y="463.50">serialport::posix::poll::wait_read_fd</text></g><g><title>serialport::posix::poll::wait_fd (45 samples, 26.16%)</title><rect x="15.1163%" y="437" width="26.1628%" height="15" fill="rgb(233,213,13)" fg:x="26" fg:w="45"/><text x="15.3663%" y="447.50">serialport::posix::poll::wait_fd</text></g><g><title>nix::poll::ppoll (43 samples, 25.00%)</title><rect x="16.2791%" y="421" width="25.0000%" height="15" fill="rgb(233,141,41)" fg:x="28" fg:w="43"/><text x="16.5291%" y="431.50">nix::poll::ppoll</text></g><g><title>__ppoll (43 samples, 25.00%)</title><rect x="16.2791%" y="405" width="25.0000%" height="15" fill="rgb(239,167,4)" fg:x="28" fg:w="43"/><text x="16.5291%" y="415.50">__ppoll</text></g><g><title>syscall_return_via_sysret (1 samples, 0.58%)</title><rect x="40.6977%" y="389" width="0.5814%" height="15" fill="rgb(209,217,16)" fg:x="70" fg:w="1"/><text x="40.9477%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.58%)</title><rect x="41.2791%" y="469" width="0.5814%" height="15" fill="rgb(219,88,35)" fg:x="71" fg:w="1"/><text x="41.5291%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.58%)</title><rect x="41.2791%" y="453" width="0.5814%" height="15" fill="rgb(220,193,23)" fg:x="71" fg:w="1"/><text x="41.5291%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.58%)</title><rect x="41.2791%" y="437" width="0.5814%" height="15" fill="rgb(230,90,52)" fg:x="71" fg:w="1"/><text x="41.5291%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.58%)</title><rect x="41.2791%" y="421" width="0.5814%" height="15" fill="rgb(252,106,19)" fg:x="71" fg:w="1"/><text x="41.5291%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.58%)</title><rect x="41.2791%" y="405" width="0.5814%" height="15" fill="rgb(206,74,20)" fg:x="71" fg:w="1"/><text x="41.5291%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.58%)</title><rect x="41.2791%" y="389" width="0.5814%" height="15" fill="rgb(230,138,44)" fg:x="71" fg:w="1"/><text x="41.5291%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.58%)</title><rect x="41.2791%" y="373" width="0.5814%" height="15" fill="rgb(235,182,43)" fg:x="71" fg:w="1"/><text x="41.5291%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.58%)</title><rect x="41.2791%" y="357" width="0.5814%" height="15" fill="rgb(242,16,51)" fg:x="71" fg:w="1"/><text x="41.5291%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.58%)</title><rect x="41.2791%" y="341" width="0.5814%" height="15" fill="rgb(248,9,4)" fg:x="71" fg:w="1"/><text x="41.5291%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.58%)</title><rect x="41.2791%" y="325" width="0.5814%" height="15" fill="rgb(210,31,22)" fg:x="71" fg:w="1"/><text x="41.5291%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.58%)</title><rect x="41.2791%" y="309" width="0.5814%" height="15" fill="rgb(239,54,39)" fg:x="71" fg:w="1"/><text x="41.5291%" y="319.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.58%)</title><rect x="41.2791%" y="293" width="0.5814%" height="15" fill="rgb(230,99,41)" fg:x="71" fg:w="1"/><text x="41.5291%" y="303.50"></text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw::maybe_unwind (61 samples, 35.47%)</title><rect x="7.5581%" y="533" width="35.4651%" height="15" fill="rgb(253,106,12)" fg:x="13" fg:w="61"/><text x="7.8081%" y="543.50">&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw:..</text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw::{{closure}} (61 samples, 35.47%)</title><rect x="7.5581%" y="517" width="35.4651%" height="15" fill="rgb(213,46,41)" fg:x="13" fg:w="61"/><text x="7.8081%" y="527.50">&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw:..</text></g><g><title>macroquad::exec::resume (61 samples, 35.47%)</title><rect x="7.5581%" y="501" width="35.4651%" height="15" fill="rgb(215,133,35)" fg:x="13" fg:w="61"/><text x="7.8081%" y="511.50">macroquad::exec::resume</text></g><g><title>rs_serial::amain::{{closure}} (61 samples, 35.47%)</title><rect x="7.5581%" y="485" width="35.4651%" height="15" fill="rgb(213,28,5)" fg:x="13" fg:w="61"/><text x="7.8081%" y="495.50">rs_serial::amain::{{closure}}</text></g><g><title>rs_serial::draw_frame::{{closure}} (2 samples, 1.16%)</title><rect x="41.8605%" y="469" width="1.1628%" height="15" fill="rgb(215,77,49)" fg:x="72" fg:w="2"/><text x="42.1105%" y="479.50"></text></g><g><title>macroquad::window::clear_background (2 samples, 1.16%)</title><rect x="41.8605%" y="453" width="1.1628%" height="15" fill="rgb(248,100,22)" fg:x="72" fg:w="2"/><text x="42.1105%" y="463.50"></text></g><g><title>macroquad::quad_gl::QuadGl::clear (2 samples, 1.16%)</title><rect x="41.8605%" y="437" width="1.1628%" height="15" fill="rgb(208,67,9)" fg:x="72" fg:w="2"/><text x="42.1105%" y="447.50"></text></g><g><title>[radeonsi_dri.so] (2 samples, 1.16%)</title><rect x="41.8605%" y="421" width="1.1628%" height="15" fill="rgb(219,133,21)" fg:x="72" fg:w="2"/><text x="42.1105%" y="431.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="42.4419%" y="405" width="0.5814%" height="15" fill="rgb(246,46,29)" fg:x="73" fg:w="1"/><text x="42.6919%" y="415.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="42.4419%" y="389" width="0.5814%" height="15" fill="rgb(246,185,52)" fg:x="73" fg:w="1"/><text x="42.6919%" y="399.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="42.4419%" y="373" width="0.5814%" height="15" fill="rgb(252,136,11)" fg:x="73" fg:w="1"/><text x="42.6919%" y="383.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="42.4419%" y="357" width="0.5814%" height="15" fill="rgb(219,138,53)" fg:x="73" fg:w="1"/><text x="42.6919%" y="367.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="43.0233%" y="533" width="0.5814%" height="15" fill="rgb(211,51,23)" fg:x="74" fg:w="1"/><text x="43.2733%" y="543.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="43.0233%" y="517" width="0.5814%" height="15" fill="rgb(247,221,28)" fg:x="74" fg:w="1"/><text x="43.2733%" y="527.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="43.0233%" y="501" width="0.5814%" height="15" fill="rgb(251,222,45)" fg:x="74" fg:w="1"/><text x="43.2733%" y="511.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="43.0233%" y="485" width="0.5814%" height="15" fill="rgb(217,162,53)" fg:x="74" fg:w="1"/><text x="43.2733%" y="495.50"></text></g><g><title>syscall (1 samples, 0.58%)</title><rect x="43.0233%" y="469" width="0.5814%" height="15" fill="rgb(229,93,14)" fg:x="74" fg:w="1"/><text x="43.2733%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.58%)</title><rect x="43.0233%" y="453" width="0.5814%" height="15" fill="rgb(209,67,49)" fg:x="74" fg:w="1"/><text x="43.2733%" y="463.50"></text></g><g><title>do_syscall_64 (1 samples, 0.58%)</title><rect x="43.0233%" y="437" width="0.5814%" height="15" fill="rgb(213,87,29)" fg:x="74" fg:w="1"/><text x="43.2733%" y="447.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.58%)</title><rect x="43.0233%" y="421" width="0.5814%" height="15" fill="rgb(205,151,52)" fg:x="74" fg:w="1"/><text x="43.2733%" y="431.50"></text></g><g><title>do_futex (1 samples, 0.58%)</title><rect x="43.0233%" y="405" width="0.5814%" height="15" fill="rgb(253,215,39)" fg:x="74" fg:w="1"/><text x="43.2733%" y="415.50"></text></g><g><title>futex_wait (1 samples, 0.58%)</title><rect x="43.0233%" y="389" width="0.5814%" height="15" fill="rgb(221,220,41)" fg:x="74" fg:w="1"/><text x="43.2733%" y="399.50"></text></g><g><title>futex_wait_queue (1 samples, 0.58%)</title><rect x="43.0233%" y="373" width="0.5814%" height="15" fill="rgb(218,133,21)" fg:x="74" fg:w="1"/><text x="43.2733%" y="383.50"></text></g><g><title>schedule (1 samples, 0.58%)</title><rect x="43.0233%" y="357" width="0.5814%" height="15" fill="rgb(221,193,43)" fg:x="74" fg:w="1"/><text x="43.2733%" y="367.50"></text></g><g><title>__schedule (1 samples, 0.58%)</title><rect x="43.0233%" y="341" width="0.5814%" height="15" fill="rgb(240,128,52)" fg:x="74" fg:w="1"/><text x="43.2733%" y="351.50"></text></g><g><title>dequeue_task (1 samples, 0.58%)</title><rect x="43.0233%" y="325" width="0.5814%" height="15" fill="rgb(253,114,12)" fg:x="74" fg:w="1"/><text x="43.2733%" y="335.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.58%)</title><rect x="43.0233%" y="309" width="0.5814%" height="15" fill="rgb(215,223,47)" fg:x="74" fg:w="1"/><text x="43.2733%" y="319.50"></text></g><g><title>dequeue_entity (1 samples, 0.58%)</title><rect x="43.0233%" y="293" width="0.5814%" height="15" fill="rgb(248,225,23)" fg:x="74" fg:w="1"/><text x="43.2733%" y="303.50"></text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::apply_bindings (1 samples, 0.58%)</title><rect x="43.6047%" y="437" width="0.5814%" height="15" fill="rgb(250,108,0)" fg:x="75" fg:w="1"/><text x="43.8547%" y="447.50"></text></g><g><title>miniquad::graphics::gl::cache::GlCache::bind_texture (1 samples, 0.58%)</title><rect x="43.6047%" y="421" width="0.5814%" height="15" fill="rgb(228,208,7)" fg:x="75" fg:w="1"/><text x="43.8547%" y="431.50"></text></g><g><title>miniquad::native::gl::glBindTexture (1 samples, 0.58%)</title><rect x="43.6047%" y="405" width="0.5814%" height="15" fill="rgb(244,45,10)" fg:x="75" fg:w="1"/><text x="43.8547%" y="415.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="43.6047%" y="389" width="0.5814%" height="15" fill="rgb(207,125,25)" fg:x="75" fg:w="1"/><text x="43.8547%" y="399.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="43.6047%" y="373" width="0.5814%" height="15" fill="rgb(210,195,18)" fg:x="75" fg:w="1"/><text x="43.8547%" y="383.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="43.6047%" y="357" width="0.5814%" height="15" fill="rgb(249,80,12)" fg:x="75" fg:w="1"/><text x="43.8547%" y="367.50"></text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw (64 samples, 37.21%)</title><rect x="7.5581%" y="549" width="37.2093%" height="15" fill="rgb(221,65,9)" fg:x="13" fg:w="64"/><text x="7.8081%" y="559.50">&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::draw</text></g><g><title>macroquad::Context::end_frame (2 samples, 1.16%)</title><rect x="43.6047%" y="533" width="1.1628%" height="15" fill="rgb(235,49,36)" fg:x="75" fg:w="2"/><text x="43.8547%" y="543.50"></text></g><g><title>macroquad::experimental::scene::update (2 samples, 1.16%)</title><rect x="43.6047%" y="517" width="1.1628%" height="15" fill="rgb(225,32,20)" fg:x="75" fg:w="2"/><text x="43.8547%" y="527.50"></text></g><g><title>macroquad::experimental::scene::Scene::update (2 samples, 1.16%)</title><rect x="43.6047%" y="501" width="1.1628%" height="15" fill="rgb(215,141,46)" fg:x="75" fg:w="2"/><text x="43.8547%" y="511.50"></text></g><g><title>macroquad::camera::set_camera (2 samples, 1.16%)</title><rect x="43.6047%" y="485" width="1.1628%" height="15" fill="rgb(250,160,47)" fg:x="75" fg:w="2"/><text x="43.8547%" y="495.50"></text></g><g><title>macroquad::Context::perform_render_passes (2 samples, 1.16%)</title><rect x="43.6047%" y="469" width="1.1628%" height="15" fill="rgb(216,222,40)" fg:x="75" fg:w="2"/><text x="43.8547%" y="479.50"></text></g><g><title>macroquad::quad_gl::QuadGl::draw (2 samples, 1.16%)</title><rect x="43.6047%" y="453" width="1.1628%" height="15" fill="rgb(234,217,39)" fg:x="75" fg:w="2"/><text x="43.8547%" y="463.50"></text></g><g><title>&lt;miniquad::graphics::gl::GlContext as miniquad::graphics::RenderingBackend&gt;::buffer_update (1 samples, 0.58%)</title><rect x="44.1860%" y="437" width="0.5814%" height="15" fill="rgb(207,178,40)" fg:x="76" fg:w="1"/><text x="44.4360%" y="447.50"></text></g><g><title>miniquad::graphics::gl::cache::GlCache::bind_buffer (1 samples, 0.58%)</title><rect x="44.1860%" y="421" width="0.5814%" height="15" fill="rgb(221,136,13)" fg:x="76" fg:w="1"/><text x="44.4360%" y="431.50"></text></g><g><title>miniquad::native::gl::glBindBuffer (1 samples, 0.58%)</title><rect x="44.1860%" y="405" width="0.5814%" height="15" fill="rgb(249,199,10)" fg:x="76" fg:w="1"/><text x="44.4360%" y="415.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="44.1860%" y="389" width="0.5814%" height="15" fill="rgb(249,222,13)" fg:x="76" fg:w="1"/><text x="44.4360%" y="399.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="44.1860%" y="373" width="0.5814%" height="15" fill="rgb(244,185,38)" fg:x="76" fg:w="1"/><text x="44.4360%" y="383.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.58%)</title><rect x="44.7674%" y="533" width="0.5814%" height="15" fill="rgb(236,202,9)" fg:x="77" fg:w="1"/><text x="45.0174%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.58%)</title><rect x="44.7674%" y="517" width="0.5814%" height="15" fill="rgb(250,229,37)" fg:x="77" fg:w="1"/><text x="45.0174%" y="527.50"></text></g><g><title>do_syscall_64 (1 samples, 0.58%)</title><rect x="44.7674%" y="501" width="0.5814%" height="15" fill="rgb(206,174,23)" fg:x="77" fg:w="1"/><text x="45.0174%" y="511.50"></text></g><g><title>__x64_sys_sched_yield (1 samples, 0.58%)</title><rect x="44.7674%" y="485" width="0.5814%" height="15" fill="rgb(211,33,43)" fg:x="77" fg:w="1"/><text x="45.0174%" y="495.50"></text></g><g><title>do_sched_yield (1 samples, 0.58%)</title><rect x="44.7674%" y="469" width="0.5814%" height="15" fill="rgb(245,58,50)" fg:x="77" fg:w="1"/><text x="45.0174%" y="479.50"></text></g><g><title>schedule (1 samples, 0.58%)</title><rect x="44.7674%" y="453" width="0.5814%" height="15" fill="rgb(244,68,36)" fg:x="77" fg:w="1"/><text x="45.0174%" y="463.50"></text></g><g><title>__schedule (1 samples, 0.58%)</title><rect x="44.7674%" y="437" width="0.5814%" height="15" fill="rgb(232,229,15)" fg:x="77" fg:w="1"/><text x="45.0174%" y="447.50"></text></g><g><title>pick_next_task (1 samples, 0.58%)</title><rect x="44.7674%" y="421" width="0.5814%" height="15" fill="rgb(254,30,23)" fg:x="77" fg:w="1"/><text x="45.0174%" y="431.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.58%)</title><rect x="44.7674%" y="405" width="0.5814%" height="15" fill="rgb(235,160,14)" fg:x="77" fg:w="1"/><text x="45.0174%" y="415.50"></text></g><g><title>update_curr (1 samples, 0.58%)</title><rect x="44.7674%" y="389" width="0.5814%" height="15" fill="rgb(212,155,44)" fg:x="77" fg:w="1"/><text x="45.0174%" y="399.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.58%)</title><rect x="44.7674%" y="373" width="0.5814%" height="15" fill="rgb(226,2,50)" fg:x="77" fg:w="1"/><text x="45.0174%" y="383.50"></text></g><g><title>&lt;macroquad::Stage as miniquad::event::EventHandler&gt;::update (2 samples, 1.16%)</title><rect x="44.7674%" y="549" width="1.1628%" height="15" fill="rgb(234,177,6)" fg:x="77" fg:w="2"/><text x="45.0174%" y="559.50"></text></g><g><title>miniquad::window::set_cursor_grab (1 samples, 0.58%)</title><rect x="45.3488%" y="533" width="0.5814%" height="15" fill="rgb(217,24,9)" fg:x="78" fg:w="1"/><text x="45.5988%" y="543.50"></text></g><g><title>miniquad::with_native_display (1 samples, 0.58%)</title><rect x="45.3488%" y="517" width="0.5814%" height="15" fill="rgb(220,13,46)" fg:x="78" fg:w="1"/><text x="45.5988%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.58%)</title><rect x="45.3488%" y="501" width="0.5814%" height="15" fill="rgb(239,221,27)" fg:x="78" fg:w="1"/><text x="45.5988%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.58%)</title><rect x="45.3488%" y="485" width="0.5814%" height="15" fill="rgb(222,198,25)" fg:x="78" fg:w="1"/><text x="45.5988%" y="495.50"></text></g><g><title>miniquad::with_native_display::{{closure}} (1 samples, 0.58%)</title><rect x="45.3488%" y="469" width="0.5814%" height="15" fill="rgb(211,99,13)" fg:x="78" fg:w="1"/><text x="45.5988%" y="479.50"></text></g><g><title>miniquad::native::linux_x11::tl_display::with_native_display (1 samples, 0.58%)</title><rect x="45.3488%" y="453" width="0.5814%" height="15" fill="rgb(232,111,31)" fg:x="78" fg:w="1"/><text x="45.5988%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.58%)</title><rect x="45.3488%" y="437" width="0.5814%" height="15" fill="rgb(245,82,37)" fg:x="78" fg:w="1"/><text x="45.5988%" y="447.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.58%)</title><rect x="45.3488%" y="421" width="0.5814%" height="15" fill="rgb(227,149,46)" fg:x="78" fg:w="1"/><text x="45.5988%" y="431.50"></text></g><g><title>miniquad::native::linux_x11::tl_display::with_native_display::{{closure}} (1 samples, 0.58%)</title><rect x="45.3488%" y="405" width="0.5814%" height="15" fill="rgb(218,36,50)" fg:x="78" fg:w="1"/><text x="45.5988%" y="415.50"></text></g><g><title>XFlush (1 samples, 0.58%)</title><rect x="45.3488%" y="389" width="0.5814%" height="15" fill="rgb(226,80,48)" fg:x="78" fg:w="1"/><text x="45.5988%" y="399.50"></text></g><g><title>_XFlush (1 samples, 0.58%)</title><rect x="45.3488%" y="373" width="0.5814%" height="15" fill="rgb(238,224,15)" fg:x="78" fg:w="1"/><text x="45.5988%" y="383.50"></text></g><g><title>_XSend (1 samples, 0.58%)</title><rect x="45.3488%" y="357" width="0.5814%" height="15" fill="rgb(241,136,10)" fg:x="78" fg:w="1"/><text x="45.5988%" y="367.50"></text></g><g><title>xcb_writev (1 samples, 0.58%)</title><rect x="45.3488%" y="341" width="0.5814%" height="15" fill="rgb(208,32,45)" fg:x="78" fg:w="1"/><text x="45.5988%" y="351.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.58%)</title><rect x="45.3488%" y="325" width="0.5814%" height="15" fill="rgb(207,135,9)" fg:x="78" fg:w="1"/><text x="45.5988%" y="335.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.58%)</title><rect x="45.3488%" y="309" width="0.5814%" height="15" fill="rgb(206,86,44)" fg:x="78" fg:w="1"/><text x="45.5988%" y="319.50"></text></g><g><title>__GI___writev (1 samples, 0.58%)</title><rect x="45.3488%" y="293" width="0.5814%" height="15" fill="rgb(245,177,15)" fg:x="78" fg:w="1"/><text x="45.5988%" y="303.50"></text></g><g><title>__GI___writev (1 samples, 0.58%)</title><rect x="45.3488%" y="277" width="0.5814%" height="15" fill="rgb(206,64,50)" fg:x="78" fg:w="1"/><text x="45.5988%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.58%)</title><rect x="45.3488%" y="261" width="0.5814%" height="15" fill="rgb(234,36,40)" fg:x="78" fg:w="1"/><text x="45.5988%" y="271.50"></text></g><g><title>do_syscall_64 (1 samples, 0.58%)</title><rect x="45.3488%" y="245" width="0.5814%" height="15" fill="rgb(213,64,8)" fg:x="78" fg:w="1"/><text x="45.5988%" y="255.50"></text></g><g><title>__x64_sys_writev (1 samples, 0.58%)</title><rect x="45.3488%" y="229" width="0.5814%" height="15" fill="rgb(210,75,36)" fg:x="78" fg:w="1"/><text x="45.5988%" y="239.50"></text></g><g><title>do_writev (1 samples, 0.58%)</title><rect x="45.3488%" y="213" width="0.5814%" height="15" fill="rgb(229,88,21)" fg:x="78" fg:w="1"/><text x="45.5988%" y="223.50"></text></g><g><title>vfs_writev (1 samples, 0.58%)</title><rect x="45.3488%" y="197" width="0.5814%" height="15" fill="rgb(252,204,47)" fg:x="78" fg:w="1"/><text x="45.5988%" y="207.50"></text></g><g><title>do_iter_write (1 samples, 0.58%)</title><rect x="45.3488%" y="181" width="0.5814%" height="15" fill="rgb(208,77,27)" fg:x="78" fg:w="1"/><text x="45.5988%" y="191.50"></text></g><g><title>do_iter_readv_writev (1 samples, 0.58%)</title><rect x="45.3488%" y="165" width="0.5814%" height="15" fill="rgb(221,76,26)" fg:x="78" fg:w="1"/><text x="45.5988%" y="175.50"></text></g><g><title>sock_write_iter (1 samples, 0.58%)</title><rect x="45.3488%" y="149" width="0.5814%" height="15" fill="rgb(225,139,18)" fg:x="78" fg:w="1"/><text x="45.5988%" y="159.50"></text></g><g><title>sock_sendmsg (1 samples, 0.58%)</title><rect x="45.3488%" y="133" width="0.5814%" height="15" fill="rgb(230,137,11)" fg:x="78" fg:w="1"/><text x="45.5988%" y="143.50"></text></g><g><title>unix_stream_sendmsg (1 samples, 0.58%)</title><rect x="45.3488%" y="117" width="0.5814%" height="15" fill="rgb(212,28,1)" fg:x="78" fg:w="1"/><text x="45.5988%" y="127.50"></text></g><g><title>sock_alloc_send_pskb (1 samples, 0.58%)</title><rect x="45.3488%" y="101" width="0.5814%" height="15" fill="rgb(248,164,17)" fg:x="78" fg:w="1"/><text x="45.5988%" y="111.50"></text></g><g><title>alloc_skb_with_frags (1 samples, 0.58%)</title><rect x="45.3488%" y="85" width="0.5814%" height="15" fill="rgb(222,171,42)" fg:x="78" fg:w="1"/><text x="45.5988%" y="95.50"></text></g><g><title>__alloc_skb (1 samples, 0.58%)</title><rect x="45.3488%" y="69" width="0.5814%" height="15" fill="rgb(243,84,45)" fg:x="78" fg:w="1"/><text x="45.5988%" y="79.50"></text></g><g><title>kmalloc_reserve (1 samples, 0.58%)</title><rect x="45.3488%" y="53" width="0.5814%" height="15" fill="rgb(252,49,23)" fg:x="78" fg:w="1"/><text x="45.5988%" y="63.50"></text></g><g><title>memset_erms (1 samples, 0.58%)</title><rect x="45.3488%" y="37" width="0.5814%" height="15" fill="rgb(215,19,7)" fg:x="78" fg:w="1"/><text x="45.5988%" y="47.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.58%)</title><rect x="45.9302%" y="549" width="0.5814%" height="15" fill="rgb(238,81,41)" fg:x="79" fg:w="1"/><text x="46.1802%" y="559.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.58%)</title><rect x="45.9302%" y="533" width="0.5814%" height="15" fill="rgb(210,199,37)" fg:x="79" fg:w="1"/><text x="46.1802%" y="543.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.58%)</title><rect x="45.9302%" y="517" width="0.5814%" height="15" fill="rgb(244,192,49)" fg:x="79" fg:w="1"/><text x="46.1802%" y="527.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="45.9302%" y="501" width="0.5814%" height="15" fill="rgb(226,211,11)" fg:x="79" fg:w="1"/><text x="46.1802%" y="511.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="45.9302%" y="485" width="0.5814%" height="15" fill="rgb(236,162,54)" fg:x="79" fg:w="1"/><text x="46.1802%" y="495.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="45.9302%" y="469" width="0.5814%" height="15" fill="rgb(220,229,9)" fg:x="79" fg:w="1"/><text x="46.1802%" y="479.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="45.9302%" y="453" width="0.5814%" height="15" fill="rgb(250,87,22)" fg:x="79" fg:w="1"/><text x="46.1802%" y="463.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="45.9302%" y="437" width="0.5814%" height="15" fill="rgb(239,43,17)" fg:x="79" fg:w="1"/><text x="46.1802%" y="447.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="45.9302%" y="421" width="0.5814%" height="15" fill="rgb(231,177,25)" fg:x="79" fg:w="1"/><text x="46.1802%" y="431.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="45.9302%" y="405" width="0.5814%" height="15" fill="rgb(219,179,1)" fg:x="79" fg:w="1"/><text x="46.1802%" y="415.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="45.9302%" y="389" width="0.5814%" height="15" fill="rgb(238,219,53)" fg:x="79" fg:w="1"/><text x="46.1802%" y="399.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="45.9302%" y="373" width="0.5814%" height="15" fill="rgb(232,167,36)" fg:x="79" fg:w="1"/><text x="46.1802%" y="383.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="45.9302%" y="357" width="0.5814%" height="15" fill="rgb(244,19,51)" fg:x="79" fg:w="1"/><text x="46.1802%" y="367.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="45.9302%" y="341" width="0.5814%" height="15" fill="rgb(224,6,22)" fg:x="79" fg:w="1"/><text x="46.1802%" y="351.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="45.9302%" y="325" width="0.5814%" height="15" fill="rgb(224,145,5)" fg:x="79" fg:w="1"/><text x="46.1802%" y="335.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.58%)</title><rect x="47.0930%" y="469" width="0.5814%" height="15" fill="rgb(234,130,49)" fg:x="81" fg:w="1"/><text x="47.3430%" y="479.50"></text></g><g><title>glPrimitiveBoundingBox (1 samples, 0.58%)</title><rect x="47.0930%" y="453" width="0.5814%" height="15" fill="rgb(254,6,2)" fg:x="81" fg:w="1"/><text x="47.3430%" y="463.50"></text></g><g><title>___dlopen (1 samples, 0.58%)</title><rect x="47.0930%" y="437" width="0.5814%" height="15" fill="rgb(208,96,46)" fg:x="81" fg:w="1"/><text x="47.3430%" y="447.50"></text></g><g><title>dlopen_implementation (1 samples, 0.58%)</title><rect x="47.0930%" y="421" width="0.5814%" height="15" fill="rgb(239,3,39)" fg:x="81" fg:w="1"/><text x="47.3430%" y="431.50"></text></g><g><title>_dlerror_run (1 samples, 0.58%)</title><rect x="47.0930%" y="405" width="0.5814%" height="15" fill="rgb(233,210,1)" fg:x="81" fg:w="1"/><text x="47.3430%" y="415.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.58%)</title><rect x="47.0930%" y="389" width="0.5814%" height="15" fill="rgb(244,137,37)" fg:x="81" fg:w="1"/><text x="47.3430%" y="399.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.58%)</title><rect x="47.0930%" y="373" width="0.5814%" height="15" fill="rgb(240,136,2)" fg:x="81" fg:w="1"/><text x="47.3430%" y="383.50"></text></g><g><title>dlopen_doit (1 samples, 0.58%)</title><rect x="47.0930%" y="357" width="0.5814%" height="15" fill="rgb(239,18,37)" fg:x="81" fg:w="1"/><text x="47.3430%" y="367.50"></text></g><g><title>_dl_open (1 samples, 0.58%)</title><rect x="47.0930%" y="341" width="0.5814%" height="15" fill="rgb(218,185,22)" fg:x="81" fg:w="1"/><text x="47.3430%" y="351.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.58%)</title><rect x="47.0930%" y="325" width="0.5814%" height="15" fill="rgb(225,218,4)" fg:x="81" fg:w="1"/><text x="47.3430%" y="335.50"></text></g><g><title>dl_open_worker (1 samples, 0.58%)</title><rect x="47.0930%" y="309" width="0.5814%" height="15" fill="rgb(230,182,32)" fg:x="81" fg:w="1"/><text x="47.3430%" y="319.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.58%)</title><rect x="47.0930%" y="293" width="0.5814%" height="15" fill="rgb(242,56,43)" fg:x="81" fg:w="1"/><text x="47.3430%" y="303.50"></text></g><g><title>dl_open_worker_begin (1 samples, 0.58%)</title><rect x="47.0930%" y="277" width="0.5814%" height="15" fill="rgb(233,99,24)" fg:x="81" fg:w="1"/><text x="47.3430%" y="287.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.58%)</title><rect x="47.0930%" y="261" width="0.5814%" height="15" fill="rgb(234,209,42)" fg:x="81" fg:w="1"/><text x="47.3430%" y="271.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.58%)</title><rect x="47.0930%" y="245" width="0.5814%" height="15" fill="rgb(227,7,12)" fg:x="81" fg:w="1"/><text x="47.3430%" y="255.50"></text></g><g><title>elf_machine_rela (1 samples, 0.58%)</title><rect x="47.0930%" y="229" width="0.5814%" height="15" fill="rgb(245,203,43)" fg:x="81" fg:w="1"/><text x="47.3430%" y="239.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.58%)</title><rect x="47.0930%" y="213" width="0.5814%" height="15" fill="rgb(238,205,33)" fg:x="81" fg:w="1"/><text x="47.3430%" y="223.50"></text></g><g><title>dl_new_hash (1 samples, 0.58%)</title><rect x="47.0930%" y="197" width="0.5814%" height="15" fill="rgb(231,56,7)" fg:x="81" fg:w="1"/><text x="47.3430%" y="207.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (3 samples, 1.74%)</title><rect x="46.5116%" y="485" width="1.7442%" height="15" fill="rgb(244,186,29)" fg:x="80" fg:w="3"/><text x="46.7616%" y="495.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="47.6744%" y="469" width="0.5814%" height="15" fill="rgb(234,111,31)" fg:x="82" fg:w="1"/><text x="47.9244%" y="479.50"></text></g><g><title>XML_ParseBuffer (1 samples, 0.58%)</title><rect x="48.2558%" y="437" width="0.5814%" height="15" fill="rgb(241,149,10)" fg:x="83" fg:w="1"/><text x="48.5058%" y="447.50"></text></g><g><title>[libexpat.so.1.8.7] (1 samples, 0.58%)</title><rect x="48.2558%" y="421" width="0.5814%" height="15" fill="rgb(249,206,44)" fg:x="83" fg:w="1"/><text x="48.5058%" y="431.50"></text></g><g><title>[libexpat.so.1.8.7] (1 samples, 0.58%)</title><rect x="48.2558%" y="405" width="0.5814%" height="15" fill="rgb(251,153,30)" fg:x="83" fg:w="1"/><text x="48.5058%" y="415.50"></text></g><g><title>[libexpat.so.1.8.7] (1 samples, 0.58%)</title><rect x="48.2558%" y="389" width="0.5814%" height="15" fill="rgb(239,152,38)" fg:x="83" fg:w="1"/><text x="48.5058%" y="399.50"></text></g><g><title>[libexpat.so.1.8.7] (1 samples, 0.58%)</title><rect x="48.2558%" y="373" width="0.5814%" height="15" fill="rgb(249,139,47)" fg:x="83" fg:w="1"/><text x="48.5058%" y="383.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="48.8372%" y="373" width="0.5814%" height="15" fill="rgb(244,64,35)" fg:x="84" fg:w="1"/><text x="49.0872%" y="383.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="48.8372%" y="357" width="0.5814%" height="15" fill="rgb(216,46,15)" fg:x="84" fg:w="1"/><text x="49.0872%" y="367.50"></text></g><g><title>___pthread_mutex_lock (1 samples, 0.58%)</title><rect x="48.8372%" y="341" width="0.5814%" height="15" fill="rgb(250,74,19)" fg:x="84" fg:w="1"/><text x="49.0872%" y="351.50"></text></g><g><title>lll_mutex_lock_optimized (1 samples, 0.58%)</title><rect x="48.8372%" y="325" width="0.5814%" height="15" fill="rgb(249,42,33)" fg:x="84" fg:w="1"/><text x="49.0872%" y="335.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.58%)</title><rect x="48.8372%" y="309" width="0.5814%" height="15" fill="rgb(242,149,17)" fg:x="84" fg:w="1"/><text x="49.0872%" y="319.50"></text></g><g><title>exc_page_fault (1 samples, 0.58%)</title><rect x="48.8372%" y="293" width="0.5814%" height="15" fill="rgb(244,29,21)" fg:x="84" fg:w="1"/><text x="49.0872%" y="303.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.58%)</title><rect x="48.8372%" y="277" width="0.5814%" height="15" fill="rgb(220,130,37)" fg:x="84" fg:w="1"/><text x="49.0872%" y="287.50"></text></g><g><title>handle_mm_fault (1 samples, 0.58%)</title><rect x="48.8372%" y="261" width="0.5814%" height="15" fill="rgb(211,67,2)" fg:x="84" fg:w="1"/><text x="49.0872%" y="271.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.58%)</title><rect x="48.8372%" y="245" width="0.5814%" height="15" fill="rgb(235,68,52)" fg:x="84" fg:w="1"/><text x="49.0872%" y="255.50"></text></g><g><title>handle_pte_fault (1 samples, 0.58%)</title><rect x="48.8372%" y="229" width="0.5814%" height="15" fill="rgb(246,142,3)" fg:x="84" fg:w="1"/><text x="49.0872%" y="239.50"></text></g><g><title>do_wp_page (1 samples, 0.58%)</title><rect x="48.8372%" y="213" width="0.5814%" height="15" fill="rgb(241,25,7)" fg:x="84" fg:w="1"/><text x="49.0872%" y="223.50"></text></g><g><title>wp_page_copy (1 samples, 0.58%)</title><rect x="48.8372%" y="197" width="0.5814%" height="15" fill="rgb(242,119,39)" fg:x="84" fg:w="1"/><text x="49.0872%" y="207.50"></text></g><g><title>ptep_clear_flush (1 samples, 0.58%)</title><rect x="48.8372%" y="181" width="0.5814%" height="15" fill="rgb(241,98,45)" fg:x="84" fg:w="1"/><text x="49.0872%" y="191.50"></text></g><g><title>flush_tlb_mm_range (1 samples, 0.58%)</title><rect x="48.8372%" y="165" width="0.5814%" height="15" fill="rgb(254,28,30)" fg:x="84" fg:w="1"/><text x="49.0872%" y="175.50"></text></g><g><title>native_flush_tlb_multi (1 samples, 0.58%)</title><rect x="48.8372%" y="149" width="0.5814%" height="15" fill="rgb(241,142,54)" fg:x="84" fg:w="1"/><text x="49.0872%" y="159.50"></text></g><g><title>on_each_cpu_cond_mask (1 samples, 0.58%)</title><rect x="48.8372%" y="133" width="0.5814%" height="15" fill="rgb(222,85,15)" fg:x="84" fg:w="1"/><text x="49.0872%" y="143.50"></text></g><g><title>smp_call_function_many_cond (1 samples, 0.58%)</title><rect x="48.8372%" y="117" width="0.5814%" height="15" fill="rgb(210,85,47)" fg:x="84" fg:w="1"/><text x="49.0872%" y="127.50"></text></g><g><title>_raw_spin_unlock_irqrestore (5 samples, 2.91%)</title><rect x="55.2326%" y="229" width="2.9070%" height="15" fill="rgb(224,206,25)" fg:x="95" fg:w="5"/><text x="55.4826%" y="239.50">_r..</text></g><g><title>__bitmap_and (5 samples, 2.91%)</title><rect x="61.0465%" y="213" width="2.9070%" height="15" fill="rgb(243,201,19)" fg:x="105" fg:w="5"/><text x="61.2965%" y="223.50">__..</text></g><g><title>cpuset_cpus_allowed (20 samples, 11.63%)</title><rect x="58.1395%" y="229" width="11.6279%" height="15" fill="rgb(236,59,4)" fg:x="100" fg:w="20"/><text x="58.3895%" y="239.50">cpuset_cpus_allow..</text></g><g><title>guarantee_online_cpus (10 samples, 5.81%)</title><rect x="63.9535%" y="213" width="5.8140%" height="15" fill="rgb(254,179,45)" fg:x="110" fg:w="10"/><text x="64.2035%" y="223.50">guarant..</text></g><g><title>__x64_sys_sched_setaffinity (60 samples, 34.88%)</title><rect x="49.4186%" y="277" width="34.8837%" height="15" fill="rgb(226,14,10)" fg:x="85" fg:w="60"/><text x="49.6686%" y="287.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (60 samples, 34.88%)</title><rect x="49.4186%" y="261" width="34.8837%" height="15" fill="rgb(244,27,41)" fg:x="85" fg:w="60"/><text x="49.6686%" y="271.50">sched_setaffinity</text></g><g><title>__sched_setaffinity (55 samples, 31.98%)</title><rect x="52.3256%" y="245" width="31.9767%" height="15" fill="rgb(235,35,32)" fg:x="90" fg:w="55"/><text x="52.5756%" y="255.50">__sched_setaffinity</text></g><g><title>free_cpumask_var (25 samples, 14.53%)</title><rect x="69.7674%" y="229" width="14.5349%" height="15" fill="rgb(218,68,31)" fg:x="120" fg:w="25"/><text x="70.0174%" y="239.50">free_cpumask_var</text></g><g><title>kfree (25 samples, 14.53%)</title><rect x="69.7674%" y="213" width="14.5349%" height="15" fill="rgb(207,120,37)" fg:x="120" fg:w="25"/><text x="70.0174%" y="223.50">kfree</text></g><g><title>exit_to_user_mode_loop (5 samples, 2.91%)</title><rect x="84.3023%" y="245" width="2.9070%" height="15" fill="rgb(227,98,0)" fg:x="145" fg:w="5"/><text x="84.5523%" y="255.50">ex..</text></g><g><title>__rseq_handle_notify_resume (5 samples, 2.91%)</title><rect x="84.3023%" y="229" width="2.9070%" height="15" fill="rgb(207,7,3)" fg:x="145" fg:w="5"/><text x="84.5523%" y="239.50">__..</text></g><g><title>rseq_ip_fixup (5 samples, 2.91%)</title><rect x="84.3023%" y="213" width="2.9070%" height="15" fill="rgb(206,98,19)" fg:x="145" fg:w="5"/><text x="84.5523%" y="223.50">rs..</text></g><g><title>__get_user_8 (5 samples, 2.91%)</title><rect x="84.3023%" y="197" width="2.9070%" height="15" fill="rgb(217,5,26)" fg:x="145" fg:w="5"/><text x="84.5523%" y="207.50">__..</text></g><g><title>[radeonsi_dri.so] (72 samples, 41.86%)</title><rect x="48.2558%" y="485" width="41.8605%" height="15" fill="rgb(235,190,38)" fg:x="83" fg:w="72"/><text x="48.5058%" y="495.50">[radeonsi_dri.so]</text></g><g><title>[radeonsi_dri.so] (72 samples, 41.86%)</title><rect x="48.2558%" y="469" width="41.8605%" height="15" fill="rgb(247,86,24)" fg:x="83" fg:w="72"/><text x="48.5058%" y="479.50">[radeonsi_dri.so]</text></g><g><title>[radeonsi_dri.so] (72 samples, 41.86%)</title><rect x="48.2558%" y="453" width="41.8605%" height="15" fill="rgb(205,101,16)" fg:x="83" fg:w="72"/><text x="48.5058%" y="463.50">[radeonsi_dri.so]</text></g><g><title>[radeonsi_dri.so] (71 samples, 41.28%)</title><rect x="48.8372%" y="437" width="41.2791%" height="15" fill="rgb(246,168,33)" fg:x="84" fg:w="71"/><text x="49.0872%" y="447.50">[radeonsi_dri.so]</text></g><g><title>[radeonsi_dri.so] (71 samples, 41.28%)</title><rect x="48.8372%" y="421" width="41.2791%" height="15" fill="rgb(231,114,1)" fg:x="84" fg:w="71"/><text x="49.0872%" y="431.50">[radeonsi_dri.so]</text></g><g><title>amdgpu_winsys_create (71 samples, 41.28%)</title><rect x="48.8372%" y="405" width="41.2791%" height="15" fill="rgb(207,184,53)" fg:x="84" fg:w="71"/><text x="49.0872%" y="415.50">amdgpu_winsys_create</text></g><g><title>[radeonsi_dri.so] (71 samples, 41.28%)</title><rect x="48.8372%" y="389" width="41.2791%" height="15" fill="rgb(224,95,51)" fg:x="84" fg:w="71"/><text x="49.0872%" y="399.50">[radeonsi_dri.so]</text></g><g><title>__pthread_once_slow (70 samples, 40.70%)</title><rect x="49.4186%" y="373" width="40.6977%" height="15" fill="rgb(212,188,45)" fg:x="85" fg:w="70"/><text x="49.6686%" y="383.50">__pthread_once_slow</text></g><g><title>[radeonsi_dri.so] (70 samples, 40.70%)</title><rect x="49.4186%" y="357" width="40.6977%" height="15" fill="rgb(223,154,38)" fg:x="85" fg:w="70"/><text x="49.6686%" y="367.50">[radeonsi_dri.so]</text></g><g><title>[radeonsi_dri.so] (70 samples, 40.70%)</title><rect x="49.4186%" y="341" width="40.6977%" height="15" fill="rgb(251,22,52)" fg:x="85" fg:w="70"/><text x="49.6686%" y="351.50">[radeonsi_dri.so]</text></g><g><title>__pthread_setaffinity_new (70 samples, 40.70%)</title><rect x="49.4186%" y="325" width="40.6977%" height="15" fill="rgb(229,209,22)" fg:x="85" fg:w="70"/><text x="49.6686%" y="335.50">__pthread_setaffinity_new</text></g><g><title>entry_SYSCALL_64_after_hwframe (70 samples, 40.70%)</title><rect x="49.4186%" y="309" width="40.6977%" height="15" fill="rgb(234,138,34)" fg:x="85" fg:w="70"/><text x="49.6686%" y="319.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>do_syscall_64 (70 samples, 40.70%)</title><rect x="49.4186%" y="293" width="40.6977%" height="15" fill="rgb(212,95,11)" fg:x="85" fg:w="70"/><text x="49.6686%" y="303.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (10 samples, 5.81%)</title><rect x="84.3023%" y="277" width="5.8140%" height="15" fill="rgb(240,179,47)" fg:x="145" fg:w="10"/><text x="84.5523%" y="287.50">syscall..</text></g><g><title>exit_to_user_mode_prepare (10 samples, 5.81%)</title><rect x="84.3023%" y="261" width="5.8140%" height="15" fill="rgb(240,163,11)" fg:x="145" fg:w="10"/><text x="84.5523%" y="271.50">exit_to..</text></g><g><title>switch_fpu_return (5 samples, 2.91%)</title><rect x="87.2093%" y="245" width="2.9070%" height="15" fill="rgb(236,37,12)" fg:x="150" fg:w="5"/><text x="87.4593%" y="255.50">sw..</text></g><g><title>restore_fpregs_from_fpstate (5 samples, 2.91%)</title><rect x="87.2093%" y="229" width="2.9070%" height="15" fill="rgb(232,164,16)" fg:x="150" fg:w="5"/><text x="87.4593%" y="239.50">re..</text></g><g><title>[libGLX_mesa.so.0.0.0] (76 samples, 44.19%)</title><rect x="46.5116%" y="533" width="44.1860%" height="15" fill="rgb(244,205,15)" fg:x="80" fg:w="76"/><text x="46.7616%" y="543.50">[libGLX_mesa.so.0.0.0]</text></g><g><title>[libGLX_mesa.so.0.0.0] (76 samples, 44.19%)</title><rect x="46.5116%" y="517" width="44.1860%" height="15" fill="rgb(223,117,47)" fg:x="80" fg:w="76"/><text x="46.7616%" y="527.50">[libGLX_mesa.so.0.0.0]</text></g><g><title>[libGLX_mesa.so.0.0.0] (76 samples, 44.19%)</title><rect x="46.5116%" y="501" width="44.1860%" height="15" fill="rgb(244,107,35)" fg:x="80" fg:w="76"/><text x="46.7616%" y="511.50">[libGLX_mesa.so.0.0.0]</text></g><g><title>glPrimitiveBoundingBox (1 samples, 0.58%)</title><rect x="90.1163%" y="485" width="0.5814%" height="15" fill="rgb(205,140,8)" fg:x="155" fg:w="1"/><text x="90.3663%" y="495.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.58%)</title><rect x="90.1163%" y="469" width="0.5814%" height="15" fill="rgb(228,84,46)" fg:x="155" fg:w="1"/><text x="90.3663%" y="479.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.58%)</title><rect x="90.1163%" y="453" width="0.5814%" height="15" fill="rgb(254,188,9)" fg:x="155" fg:w="1"/><text x="90.3663%" y="463.50"></text></g><g><title>XML_ParseBuffer (1 samples, 0.58%)</title><rect x="90.1163%" y="437" width="0.5814%" height="15" fill="rgb(206,112,54)" fg:x="155" fg:w="1"/><text x="90.3663%" y="447.50"></text></g><g><title>[libexpat.so.1.8.7] (1 samples, 0.58%)</title><rect x="90.1163%" y="421" width="0.5814%" height="15" fill="rgb(216,84,49)" fg:x="155" fg:w="1"/><text x="90.3663%" y="431.50"></text></g><g><title>[libexpat.so.1.8.7] (1 samples, 0.58%)</title><rect x="90.1163%" y="405" width="0.5814%" height="15" fill="rgb(214,194,35)" fg:x="155" fg:w="1"/><text x="90.3663%" y="415.50"></text></g><g><title>[libexpat.so.1.8.7] (1 samples, 0.58%)</title><rect x="90.1163%" y="389" width="0.5814%" height="15" fill="rgb(249,28,3)" fg:x="155" fg:w="1"/><text x="90.3663%" y="399.50"></text></g><g><title>miniquad::native::linux_x11::glx::Glx::init (77 samples, 44.77%)</title><rect x="46.5116%" y="549" width="44.7674%" height="15" fill="rgb(222,56,52)" fg:x="80" fg:w="77"/><text x="46.7616%" y="559.50">miniquad::native::linux_x11::glx::Glx::init</text></g><g><title>miniquad::native::linux_x11::glx::choose_fbconfig (1 samples, 0.58%)</title><rect x="90.6977%" y="533" width="0.5814%" height="15" fill="rgb(245,217,50)" fg:x="156" fg:w="1"/><text x="90.9477%" y="543.50"></text></g><g><title>miniquad::native::linux_x11::glx::choose_fbconfig::{{closure}} (1 samples, 0.58%)</title><rect x="90.6977%" y="517" width="0.5814%" height="15" fill="rgb(213,201,24)" fg:x="156" fg:w="1"/><text x="90.9477%" y="527.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.58%)</title><rect x="90.6977%" y="501" width="0.5814%" height="15" fill="rgb(248,116,28)" fg:x="156" fg:w="1"/><text x="90.9477%" y="511.50"></text></g><g><title>miniquad::native::linux_x11::glx_main_loop (145 samples, 84.30%)</title><rect x="7.5581%" y="565" width="84.3023%" height="15" fill="rgb(219,72,43)" fg:x="13" fg:w="145"/><text x="7.8081%" y="575.50">miniquad::native::linux_x11::glx_main_loop</text></g><g><title>miniquad::native::linux_x11::glx::Glx::swap_interval (1 samples, 0.58%)</title><rect x="91.2791%" y="549" width="0.5814%" height="15" fill="rgb(209,138,14)" fg:x="157" fg:w="1"/><text x="91.5291%" y="559.50"></text></g><g><title>[libGLX.so.0.0.0] (1 samples, 0.58%)</title><rect x="91.2791%" y="533" width="0.5814%" height="15" fill="rgb(222,18,33)" fg:x="157" fg:w="1"/><text x="91.5291%" y="543.50"></text></g><g><title>[libGLX.so.0.0.0] (1 samples, 0.58%)</title><rect x="91.2791%" y="517" width="0.5814%" height="15" fill="rgb(213,199,7)" fg:x="157" fg:w="1"/><text x="91.5291%" y="527.50"></text></g><g><title>__glDispatchMakeCurrent (1 samples, 0.58%)</title><rect x="91.2791%" y="501" width="0.5814%" height="15" fill="rgb(250,110,10)" fg:x="157" fg:w="1"/><text x="91.5291%" y="511.50"></text></g><g><title>[libGLdispatch.so.0.0.0] (1 samples, 0.58%)</title><rect x="91.2791%" y="485" width="0.5814%" height="15" fill="rgb(248,123,6)" fg:x="157" fg:w="1"/><text x="91.5291%" y="495.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (1 samples, 0.58%)</title><rect x="91.2791%" y="469" width="0.5814%" height="15" fill="rgb(206,91,31)" fg:x="157" fg:w="1"/><text x="91.5291%" y="479.50"></text></g><g><title>__strcmp_avx2 (1 samples, 0.58%)</title><rect x="91.2791%" y="453" width="0.5814%" height="15" fill="rgb(211,154,13)" fg:x="157" fg:w="1"/><text x="91.5291%" y="463.50"></text></g><g><title>miniquad::native::linux_x11::libx11::LibX11::load_extensions (5 samples, 2.91%)</title><rect x="91.8605%" y="565" width="2.9070%" height="15" fill="rgb(225,148,7)" fg:x="158" fg:w="5"/><text x="92.1105%" y="575.50">mi..</text></g><g><title>XInternAtom (5 samples, 2.91%)</title><rect x="91.8605%" y="549" width="2.9070%" height="15" fill="rgb(220,160,43)" fg:x="158" fg:w="5"/><text x="92.1105%" y="559.50">XI..</text></g><g><title>_XReply (5 samples, 2.91%)</title><rect x="91.8605%" y="533" width="2.9070%" height="15" fill="rgb(213,52,39)" fg:x="158" fg:w="5"/><text x="92.1105%" y="543.50">_X..</text></g><g><title>xcb_wait_for_reply64 (5 samples, 2.91%)</title><rect x="91.8605%" y="517" width="2.9070%" height="15" fill="rgb(243,137,7)" fg:x="158" fg:w="5"/><text x="92.1105%" y="527.50">xc..</text></g><g><title>[libxcb.so.1.1.0] (5 samples, 2.91%)</title><rect x="91.8605%" y="501" width="2.9070%" height="15" fill="rgb(230,79,13)" fg:x="158" fg:w="5"/><text x="92.1105%" y="511.50">[l..</text></g><g><title>[libxcb.so.1.1.0] (5 samples, 2.91%)</title><rect x="91.8605%" y="485" width="2.9070%" height="15" fill="rgb(247,105,23)" fg:x="158" fg:w="5"/><text x="92.1105%" y="495.50">[l..</text></g><g><title>__GI___poll (5 samples, 2.91%)</title><rect x="91.8605%" y="469" width="2.9070%" height="15" fill="rgb(223,179,41)" fg:x="158" fg:w="5"/><text x="92.1105%" y="479.50">__..</text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 2.91%)</title><rect x="91.8605%" y="453" width="2.9070%" height="15" fill="rgb(218,9,34)" fg:x="158" fg:w="5"/><text x="92.1105%" y="463.50">en..</text></g><g><title>do_syscall_64 (5 samples, 2.91%)</title><rect x="91.8605%" y="437" width="2.9070%" height="15" fill="rgb(222,106,8)" fg:x="158" fg:w="5"/><text x="92.1105%" y="447.50">do..</text></g><g><title>miniquad::native::linux_x11::libx11::LibX11::try_load (1 samples, 0.58%)</title><rect x="94.7674%" y="565" width="0.5814%" height="15" fill="rgb(211,220,0)" fg:x="163" fg:w="1"/><text x="95.0174%" y="575.50"></text></g><g><title>miniquad::native::module::linux::Module::load (1 samples, 0.58%)</title><rect x="94.7674%" y="549" width="0.5814%" height="15" fill="rgb(229,52,16)" fg:x="163" fg:w="1"/><text x="95.0174%" y="559.50"></text></g><g><title>___dlopen (1 samples, 0.58%)</title><rect x="94.7674%" y="533" width="0.5814%" height="15" fill="rgb(212,155,18)" fg:x="163" fg:w="1"/><text x="95.0174%" y="543.50"></text></g><g><title>dlopen_implementation (1 samples, 0.58%)</title><rect x="94.7674%" y="517" width="0.5814%" height="15" fill="rgb(242,21,14)" fg:x="163" fg:w="1"/><text x="95.0174%" y="527.50"></text></g><g><title>_dlerror_run (1 samples, 0.58%)</title><rect x="94.7674%" y="501" width="0.5814%" height="15" fill="rgb(222,19,48)" fg:x="163" fg:w="1"/><text x="95.0174%" y="511.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.58%)</title><rect x="94.7674%" y="485" width="0.5814%" height="15" fill="rgb(232,45,27)" fg:x="163" fg:w="1"/><text x="95.0174%" y="495.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.58%)</title><rect x="94.7674%" y="469" width="0.5814%" height="15" fill="rgb(249,103,42)" fg:x="163" fg:w="1"/><text x="95.0174%" y="479.50"></text></g><g><title>dlopen_doit (1 samples, 0.58%)</title><rect x="94.7674%" y="453" width="0.5814%" height="15" fill="rgb(246,81,33)" fg:x="163" fg:w="1"/><text x="95.0174%" y="463.50"></text></g><g><title>_dl_open (1 samples, 0.58%)</title><rect x="94.7674%" y="437" width="0.5814%" height="15" fill="rgb(252,33,42)" fg:x="163" fg:w="1"/><text x="95.0174%" y="447.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.58%)</title><rect x="94.7674%" y="421" width="0.5814%" height="15" fill="rgb(209,212,41)" fg:x="163" fg:w="1"/><text x="95.0174%" y="431.50"></text></g><g><title>dl_open_worker (1 samples, 0.58%)</title><rect x="94.7674%" y="405" width="0.5814%" height="15" fill="rgb(207,154,6)" fg:x="163" fg:w="1"/><text x="95.0174%" y="415.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.58%)</title><rect x="94.7674%" y="389" width="0.5814%" height="15" fill="rgb(223,64,47)" fg:x="163" fg:w="1"/><text x="95.0174%" y="399.50"></text></g><g><title>dl_open_worker_begin (1 samples, 0.58%)</title><rect x="94.7674%" y="373" width="0.5814%" height="15" fill="rgb(211,161,38)" fg:x="163" fg:w="1"/><text x="95.0174%" y="383.50"></text></g><g><title>_dl_map_object (1 samples, 0.58%)</title><rect x="94.7674%" y="357" width="0.5814%" height="15" fill="rgb(219,138,40)" fg:x="163" fg:w="1"/><text x="95.0174%" y="367.50"></text></g><g><title>open_verify (1 samples, 0.58%)</title><rect x="94.7674%" y="341" width="0.5814%" height="15" fill="rgb(241,228,46)" fg:x="163" fg:w="1"/><text x="95.0174%" y="351.50"></text></g><g><title>[unknown] (156 samples, 90.70%)</title><rect x="5.2326%" y="645" width="90.6977%" height="15" fill="rgb(223,209,38)" fg:x="9" fg:w="156"/><text x="5.4826%" y="655.50">[unknown]</text></g><g><title>macroquad::Window::new (152 samples, 88.37%)</title><rect x="7.5581%" y="629" width="88.3721%" height="15" fill="rgb(236,164,45)" fg:x="13" fg:w="152"/><text x="7.8081%" y="639.50">macroquad::Window::new</text></g><g><title>macroquad::Window::from_config (152 samples, 88.37%)</title><rect x="7.5581%" y="613" width="88.3721%" height="15" fill="rgb(231,15,5)" fg:x="13" fg:w="152"/><text x="7.8081%" y="623.50">macroquad::Window::from_config</text></g><g><title>miniquad::start (152 samples, 88.37%)</title><rect x="7.5581%" y="597" width="88.3721%" height="15" fill="rgb(252,35,15)" fg:x="13" fg:w="152"/><text x="7.8081%" y="607.50">miniquad::start</text></g><g><title>miniquad::native::linux_x11::run (152 samples, 88.37%)</title><rect x="7.5581%" y="581" width="88.3721%" height="15" fill="rgb(248,181,18)" fg:x="13" fg:w="152"/><text x="7.8081%" y="591.50">miniquad::native::linux_x11::run</text></g><g><title>miniquad::native::linux_x11::xi_input::LibXi::query_xi_extension (1 samples, 0.58%)</title><rect x="95.3488%" y="565" width="0.5814%" height="15" fill="rgb(233,39,42)" fg:x="164" fg:w="1"/><text x="95.5988%" y="575.50"></text></g><g><title>XIQueryVersion (1 samples, 0.58%)</title><rect x="95.3488%" y="549" width="0.5814%" height="15" fill="rgb(238,110,33)" fg:x="164" fg:w="1"/><text x="95.5988%" y="559.50"></text></g><g><title>[libXi.so.6.1.0] (1 samples, 0.58%)</title><rect x="95.3488%" y="533" width="0.5814%" height="15" fill="rgb(233,195,10)" fg:x="164" fg:w="1"/><text x="95.5988%" y="543.50"></text></g><g><title>XextCreateExtension (1 samples, 0.58%)</title><rect x="95.3488%" y="517" width="0.5814%" height="15" fill="rgb(254,105,3)" fg:x="164" fg:w="1"/><text x="95.5988%" y="527.50"></text></g><g><title>[libXext.so.6.4.0] (1 samples, 0.58%)</title><rect x="95.3488%" y="501" width="0.5814%" height="15" fill="rgb(221,225,9)" fg:x="164" fg:w="1"/><text x="95.5988%" y="511.50"></text></g><g><title>__clone3 (1 samples, 0.58%)</title><rect x="95.9302%" y="645" width="0.5814%" height="15" fill="rgb(224,227,45)" fg:x="165" fg:w="1"/><text x="96.1802%" y="655.50"></text></g><g><title>start_thread (1 samples, 0.58%)</title><rect x="95.9302%" y="629" width="0.5814%" height="15" fill="rgb(229,198,43)" fg:x="165" fg:w="1"/><text x="96.1802%" y="639.50"></text></g><g><title>[radeonsi_dri.so] (1 samples, 0.58%)</title><rect x="95.9302%" y="613" width="0.5814%" height="15" fill="rgb(206,209,35)" fg:x="165" fg:w="1"/><text x="96.1802%" y="623.50"></text></g><g><title>__GI___libc_free (1 samples, 0.58%)</title><rect x="95.9302%" y="597" width="0.5814%" height="15" fill="rgb(245,195,53)" fg:x="165" fg:w="1"/><text x="96.1802%" y="607.50"></text></g><g><title>tcache_init (1 samples, 0.58%)</title><rect x="95.9302%" y="581" width="0.5814%" height="15" fill="rgb(240,92,26)" fg:x="165" fg:w="1"/><text x="96.1802%" y="591.50"></text></g><g><title>tcache_init (1 samples, 0.58%)</title><rect x="95.9302%" y="565" width="0.5814%" height="15" fill="rgb(207,40,23)" fg:x="165" fg:w="1"/><text x="96.1802%" y="575.50"></text></g><g><title>arena_get2 (1 samples, 0.58%)</title><rect x="95.9302%" y="549" width="0.5814%" height="15" fill="rgb(223,111,35)" fg:x="165" fg:w="1"/><text x="96.1802%" y="559.50"></text></g><g><title>arena_get2 (1 samples, 0.58%)</title><rect x="95.9302%" y="533" width="0.5814%" height="15" fill="rgb(229,147,28)" fg:x="165" fg:w="1"/><text x="96.1802%" y="543.50"></text></g><g><title>_int_new_arena (1 samples, 0.58%)</title><rect x="95.9302%" y="517" width="0.5814%" height="15" fill="rgb(211,29,28)" fg:x="165" fg:w="1"/><text x="96.1802%" y="527.50"></text></g><g><title>new_heap (1 samples, 0.58%)</title><rect x="95.9302%" y="501" width="0.5814%" height="15" fill="rgb(228,72,33)" fg:x="165" fg:w="1"/><text x="96.1802%" y="511.50"></text></g><g><title>alloc_new_heap (1 samples, 0.58%)</title><rect x="95.9302%" y="485" width="0.5814%" height="15" fill="rgb(205,214,31)" fg:x="165" fg:w="1"/><text x="96.1802%" y="495.50"></text></g><g><title>__GI___munmap (1 samples, 0.58%)</title><rect x="95.9302%" y="469" width="0.5814%" height="15" fill="rgb(224,111,15)" fg:x="165" fg:w="1"/><text x="96.1802%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.58%)</title><rect x="95.9302%" y="453" width="0.5814%" height="15" fill="rgb(253,21,26)" fg:x="165" fg:w="1"/><text x="96.1802%" y="463.50"></text></g><g><title>do_syscall_64 (1 samples, 0.58%)</title><rect x="95.9302%" y="437" width="0.5814%" height="15" fill="rgb(245,139,43)" fg:x="165" fg:w="1"/><text x="96.1802%" y="447.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.58%)</title><rect x="95.9302%" y="421" width="0.5814%" height="15" fill="rgb(252,170,7)" fg:x="165" fg:w="1"/><text x="96.1802%" y="431.50"></text></g><g><title>__vm_munmap (1 samples, 0.58%)</title><rect x="95.9302%" y="405" width="0.5814%" height="15" fill="rgb(231,118,14)" fg:x="165" fg:w="1"/><text x="96.1802%" y="415.50"></text></g><g><title>__do_munmap (1 samples, 0.58%)</title><rect x="95.9302%" y="389" width="0.5814%" height="15" fill="rgb(238,83,0)" fg:x="165" fg:w="1"/><text x="96.1802%" y="399.50"></text></g><g><title>__split_vma (1 samples, 0.58%)</title><rect x="95.9302%" y="373" width="0.5814%" height="15" fill="rgb(221,39,39)" fg:x="165" fg:w="1"/><text x="96.1802%" y="383.50"></text></g><g><title>vm_area_dup (1 samples, 0.58%)</title><rect x="95.9302%" y="357" width="0.5814%" height="15" fill="rgb(222,119,46)" fg:x="165" fg:w="1"/><text x="96.1802%" y="367.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.58%)</title><rect x="95.9302%" y="341" width="0.5814%" height="15" fill="rgb(222,165,49)" fg:x="165" fg:w="1"/><text x="96.1802%" y="351.50"></text></g><g><title>memcg_slab_post_alloc_hook (1 samples, 0.58%)</title><rect x="95.9302%" y="325" width="0.5814%" height="15" fill="rgb(219,113,52)" fg:x="165" fg:w="1"/><text x="96.1802%" y="335.50"></text></g><g><title>__irqentry_text_end (5 samples, 2.91%)</title><rect x="96.5116%" y="645" width="2.9070%" height="15" fill="rgb(214,7,15)" fg:x="166" fg:w="5"/><text x="96.7616%" y="655.50">__..</text></g><g><title>all (172 samples, 100%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(235,32,4)" fg:x="0" fg:w="172"/><text x="0.2500%" y="687.50"></text></g><g><title>rs_serial (163 samples, 94.77%)</title><rect x="5.2326%" y="661" width="94.7674%" height="15" fill="rgb(238,90,54)" fg:x="9" fg:w="163"/><text x="5.4826%" y="671.50">rs_serial</text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.58%)</title><rect x="99.4186%" y="645" width="0.5814%" height="15" fill="rgb(213,208,19)" fg:x="171" fg:w="1"/><text x="99.6686%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.58%)</title><rect x="99.4186%" y="629" width="0.5814%" height="15" fill="rgb(233,156,4)" fg:x="171" fg:w="1"/><text x="99.6686%" y="639.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.58%)</title><rect x="99.4186%" y="613" width="0.5814%" height="15" fill="rgb(207,194,5)" fg:x="171" fg:w="1"/><text x="99.6686%" y="623.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.58%)</title><rect x="99.4186%" y="597" width="0.5814%" height="15" fill="rgb(206,111,30)" fg:x="171" fg:w="1"/><text x="99.6686%" y="607.50"></text></g><g><title>bprm_execve (1 samples, 0.58%)</title><rect x="99.4186%" y="581" width="0.5814%" height="15" fill="rgb(243,70,54)" fg:x="171" fg:w="1"/><text x="99.6686%" y="591.50"></text></g><g><title>bprm_execve.part.0 (1 samples, 0.58%)</title><rect x="99.4186%" y="565" width="0.5814%" height="15" fill="rgb(242,28,8)" fg:x="171" fg:w="1"/><text x="99.6686%" y="575.50"></text></g><g><title>exec_binprm (1 samples, 0.58%)</title><rect x="99.4186%" y="549" width="0.5814%" height="15" fill="rgb(219,106,18)" fg:x="171" fg:w="1"/><text x="99.6686%" y="559.50"></text></g><g><title>search_binary_handler (1 samples, 0.58%)</title><rect x="99.4186%" y="533" width="0.5814%" height="15" fill="rgb(244,222,10)" fg:x="171" fg:w="1"/><text x="99.6686%" y="543.50"></text></g><g><title>load_elf_binary (1 samples, 0.58%)</title><rect x="99.4186%" y="517" width="0.5814%" height="15" fill="rgb(236,179,52)" fg:x="171" fg:w="1"/><text x="99.6686%" y="527.50"></text></g><g><title>setup_arg_pages (1 samples, 0.58%)</title><rect x="99.4186%" y="501" width="0.5814%" height="15" fill="rgb(213,23,39)" fg:x="171" fg:w="1"/><text x="99.6686%" y="511.50"></text></g><g><title>shift_arg_pages (1 samples, 0.58%)</title><rect x="99.4186%" y="485" width="0.5814%" height="15" fill="rgb(238,48,10)" fg:x="171" fg:w="1"/><text x="99.6686%" y="495.50"></text></g><g><title>flush_tlb_mm_range (1 samples, 0.58%)</title><rect x="99.4186%" y="469" width="0.5814%" height="15" fill="rgb(251,196,23)" fg:x="171" fg:w="1"/><text x="99.6686%" y="479.50"></text></g></svg></svg>